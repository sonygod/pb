// Generated by Haxe 4.1.0-rc.1+0d88c583b
#ifndef INCLUDED_TestSqlite
#define INCLUDED_TestSqlite

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(TestSqlite)



class HXCPP_CLASS_ATTRIBUTES TestSqlite_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TestSqlite_obj OBJ_;
		TestSqlite_obj();

	public:
		enum { _hx_ClassId = 0x62aa72de };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="TestSqlite")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"TestSqlite"); }

		inline static hx::ObjectPtr< TestSqlite_obj > __new() {
			hx::ObjectPtr< TestSqlite_obj > __this = new TestSqlite_obj();
			__this->__construct();
			return __this;
		}

		inline static hx::ObjectPtr< TestSqlite_obj > __alloc(hx::Ctx *_hx_ctx) {
			TestSqlite_obj *__this = (TestSqlite_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TestSqlite_obj), false, "TestSqlite"));
			*(void **)__this = TestSqlite_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TestSqlite_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TestSqlite",de,72,aa,62); }

		static void __boot();
		static  ::Dynamic __meta__;
		static void main();
		static ::Dynamic main_dyn();

};


#endif /* INCLUDED_TestSqlite */ 
