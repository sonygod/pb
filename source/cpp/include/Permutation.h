// Generated by Haxe 4.0.0-rc.5+b1fb4afca
#ifndef INCLUDED_Permutation
#define INCLUDED_Permutation

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Permutation)



class HXCPP_CLASS_ATTRIBUTES Permutation_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Permutation_obj OBJ_;
		Permutation_obj();

	public:
		enum { _hx_ClassId = 0x53fc011e };

		void __construct(::Array< int > arr, ::Dynamic callBack);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Permutation")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"Permutation"); }
		static hx::ObjectPtr< Permutation_obj > __new(::Array< int > arr, ::Dynamic callBack);
		static hx::ObjectPtr< Permutation_obj > __alloc(hx::Ctx *_hx_ctx,::Array< int > arr, ::Dynamic callBack);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Permutation_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Permutation",e6,5c,6e,f6); }

		::Array< ::Dynamic> result;
		int total;
		 ::Dynamic callBack;
		Dynamic callBack_dyn() { return callBack;}
		void heapPermutation(::Array< int > a,int size);
		::Dynamic heapPermutation_dyn();

};


#endif /* INCLUDED_Permutation */ 
