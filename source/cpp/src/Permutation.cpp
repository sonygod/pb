// Generated by Haxe 4.1.0-rc.1+0d88c583b
#include <hxcpp.h>

#ifndef INCLUDED_Permutation
#include <Permutation.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fdce4ab2ba739b62_13_new,"Permutation","new",0x2fb168d8,"Permutation.new","Permutation.hx",13,0xaa1d7998)
HX_LOCAL_STACK_FRAME(_hx_pos_fdce4ab2ba739b62_46_heapPermutation,"Permutation","heapPermutation",0xc05517b2,"Permutation.heapPermutation","Permutation.hx",46,0xaa1d7998)

void Permutation_obj::__construct(::Array< int > arr, ::Dynamic callBack,::Array< ::Dynamic> result){
            	HX_STACKFRAME(&_hx_pos_fdce4ab2ba739b62_13_new)
HXLINE(  14)		int i = arr->length;
HXLINE(  15)		int total = 1;
HXLINE(  16)		while((i > 0)){
HXLINE(  17)			total = (total * i);
HXLINE(  18)			i = (i - 1);
            		}
HXLINE(  21)		::Permutation_obj::heapPermutation(arr,arr->length,total,callBack,result);
            	}

Dynamic Permutation_obj::__CreateEmpty() { return new Permutation_obj; }

void *Permutation_obj::_hx_vtable = 0;

Dynamic Permutation_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Permutation_obj > _hx_result = new Permutation_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool Permutation_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x53fc011e;
}

void Permutation_obj::heapPermutation(::Array< int > a,int size,int total, ::Dynamic callBack,::Array< ::Dynamic> result){
            	HX_STACKFRAME(&_hx_pos_fdce4ab2ba739b62_46_heapPermutation)
HXLINE(  47)		if ((size == 1)) {
HXLINE(  49)			::Array< ::Dynamic> _hx_tmp = ( (::Array< ::Dynamic>)(_hx_array_unsafe_get(result,0)) );
HXDLIN(  49)			_hx_tmp->push(a->copy());
HXLINE(  50)			if ((( (::Array< ::Dynamic>)(_hx_array_unsafe_get(result,0)) )->length == total)) {
HXLINE(  51)				callBack(( (::Array< ::Dynamic>)(_hx_array_unsafe_get(result,0)) ));
            			}
            		}
HXLINE(  55)		{
HXLINE(  55)			int _g = 0;
HXDLIN(  55)			int _g1 = size;
HXDLIN(  55)			while((_g < _g1)){
HXLINE(  55)				_g = (_g + 1);
HXDLIN(  55)				int i = (_g - 1);
HXLINE(  56)				::Permutation_obj::heapPermutation(a,(size - 1),total,callBack,result);
HXLINE(  59)				if (((size & 1) == 1)) {
HXLINE(  60)					int temp = a->__get(0);
HXLINE(  61)					a[0] = a->__get((size - 1));
HXLINE(  62)					a[(size - 1)] = temp;
            				}
            				else {
HXLINE(  64)					int temp1 = a->__get(i);
HXLINE(  65)					a[i] = a->__get((size - 1));
HXLINE(  66)					a[(size - 1)] = temp1;
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Permutation_obj,heapPermutation,(void))


Permutation_obj::Permutation_obj()
{
}

bool Permutation_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 15:
		if (HX_FIELD_EQ(inName,"heapPermutation") ) { outValue = heapPermutation_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Permutation_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Permutation_obj_sStaticStorageInfo = 0;
#endif

hx::Class Permutation_obj::__mClass;

static ::String Permutation_obj_sStaticFields[] = {
	HX_("heapPermutation",3a,ab,b8,7c),
	::String(null())
};

void Permutation_obj::__register()
{
	Permutation_obj _hx_dummy;
	Permutation_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("Permutation",e6,5c,6e,f6);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Permutation_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Permutation_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Permutation_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Permutation_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Permutation_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

