// Generated by Haxe 4.0.0-rc.5+b1fb4afca
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_ae8d48bb73fd7d46_375_lpad,"StringTools","lpad",0x23bd8feb,"StringTools.lpad","C:\\HaxeToolkit\\haxe\\std/StringTools.hx",375,0xb9dbeb2d)
HX_LOCAL_STACK_FRAME(_hx_pos_ae8d48bb73fd7d46_444_hex,"StringTools","hex",0xd91debd7,"StringTools.hex","C:\\HaxeToolkit\\haxe\\std/StringTools.hx",444,0xb9dbeb2d)

void StringTools_obj::__construct() { }

Dynamic StringTools_obj::__CreateEmpty() { return new StringTools_obj; }

void *StringTools_obj::_hx_vtable = 0;

Dynamic StringTools_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< StringTools_obj > _hx_result = new StringTools_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool StringTools_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0363db6a;
}

::String StringTools_obj::lpad(::String s,::String c,int l){
            	HX_GC_STACKFRAME(&_hx_pos_ae8d48bb73fd7d46_375_lpad)
HXLINE( 376)		if ((c.length <= 0)) {
HXLINE( 377)			return s;
            		}
HXLINE( 379)		 ::StringBuf buf =  ::StringBuf_obj::__alloc( HX_CTX );
HXLINE( 380)		l = (l - s.length);
HXLINE( 381)		while((buf->get_length() < l)){
HXLINE( 382)			if (hx::IsNotNull( buf->charBuf )) {
HXLINE( 382)				buf->flush();
            			}
HXDLIN( 382)			if (hx::IsNull( buf->b )) {
HXLINE( 382)				buf->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(c));
            			}
            			else {
HXLINE( 382)				::Array< ::String > buf1 = buf->b;
HXDLIN( 382)				buf1->push(::Std_obj::string(c));
            			}
            		}
HXLINE( 384)		{
HXLINE( 384)			if (hx::IsNotNull( buf->charBuf )) {
HXLINE( 384)				buf->flush();
            			}
HXDLIN( 384)			if (hx::IsNull( buf->b )) {
HXLINE( 384)				buf->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(s));
            			}
            			else {
HXLINE( 384)				::Array< ::String > buf2 = buf->b;
HXDLIN( 384)				buf2->push(::Std_obj::string(s));
            			}
            		}
HXLINE( 385)		return buf->toString();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StringTools_obj,lpad,return )

::String StringTools_obj::hex(int n, ::Dynamic digits){
            	HX_STACKFRAME(&_hx_pos_ae8d48bb73fd7d46_444_hex)
HXLINE( 450)		::String s = HX_("",00,00,00,00);
HXLINE( 451)		::String hexChars = HX_("0123456789ABCDEF",68,2a,58,a2);
HXLINE( 452)		while(true){
HXLINE( 453)			s = (hexChars.charAt((n & 15)) + s);
HXLINE( 454)			n = hx::UShr(n,4);
HXLINE( 452)			if (!((n > 0))) {
HXLINE( 452)				goto _hx_goto_2;
            			}
            		}
            		_hx_goto_2:;
HXLINE( 465)		if (hx::IsNotNull( digits )) {
HXLINE( 466)			while(hx::IsLess( s.length,digits )){
HXLINE( 467)				s = (HX_("0",30,00,00,00) + s);
            			}
            		}
HXLINE( 469)		return s;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StringTools_obj,hex,return )


StringTools_obj::StringTools_obj()
{
}

bool StringTools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"hex") ) { outValue = hex_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"lpad") ) { outValue = lpad_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *StringTools_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *StringTools_obj_sStaticStorageInfo = 0;
#endif

hx::Class StringTools_obj::__mClass;

static ::String StringTools_obj_sStaticFields[] = {
	HX_("lpad",67,5c,b8,47),
	HX_("hex",db,42,4f,00),
	::String(null())
};

void StringTools_obj::__register()
{
	StringTools_obj _hx_dummy;
	StringTools_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("StringTools",6a,db,63,03);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &StringTools_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(StringTools_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< StringTools_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StringTools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StringTools_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

