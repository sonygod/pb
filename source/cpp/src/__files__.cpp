// Generated by Haxe 4.0.0+ef18b627e
#include <hxcpp.h>

namespace hx {
const char *__hxcpp_all_files[] = {
#ifdef HXCPP_DEBUGGER
"?",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Date.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Std.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/haxe/Log.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/io/File.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/io/FileOutput.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/thread/Lock.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/thread/Mutex.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/EntryPoint.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/MainLoop.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/Timer.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Bytes.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Output.hx",
"TestSqlite.hx",
"tink/await/AsyncField.hx",
"tink/await/Error.hx",
"tink/await/OutcomeTools.hx",
"tink/core/Callback.hx",
"tink/core/Error.hx",
"tink/core/Future.hx",
#endif
 0 };

const char *__hxcpp_all_files_fullpath[] = {
#ifdef HXCPP_DEBUGGER
"D:\\Downloads\\Compressed\\heaps-master\\heaps-master\\?",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Date.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Std.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\haxe\\Log.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\io\\File.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\io\\FileOutput.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\thread\\Lock.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\thread\\Mutex.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\EntryPoint.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\MainLoop.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\Timer.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx",
"D:\\Downloads\\Compressed\\heaps-master\\heaps-master\\src\\TestSqlite.hx",
"C:\\HaxeToolkit\\haxe\\lib\\tink_await\\git\\src\\tink\\await\\AsyncField.hx",
"C:\\HaxeToolkit\\haxe\\lib\\tink_await\\git\\src\\tink\\await\\Error.hx",
"C:\\HaxeToolkit\\haxe\\lib\\tink_await\\git\\src\\tink\\await\\OutcomeTools.hx",
"C:\\HaxeToolkit\\haxe\\lib\\tink_core\\1,24,0\\src\\tink\\core\\Callback.hx",
"C:\\HaxeToolkit\\haxe\\lib\\tink_core\\1,24,0\\src\\tink\\core\\Error.hx",
"C:\\HaxeToolkit\\haxe\\lib\\tink_core\\1,24,0\\src\\tink\\core\\Future.hx",
#endif
 0 };

const char *__hxcpp_all_classes[] = {
#ifdef HXCPP_DEBUGGER
"Date",
"Std",
"CustomTrace",
"TestSqlite",
"sys.thread.Mutex",
"sys.thread.Lock",
"haxe.EntryPoint",
"haxe.Log",
"haxe.MainEvent",
"haxe.MainLoop",
"haxe.Timer",
"haxe.io.Bytes",
"haxe.io.Output",
"sys.io.File",
"sys.io.FileOutput",
"tink.await._Error.Error_Impl_",
"tink.await.OutcomeTools",
"tink.core._Callback.Callback_Impl_",
"tink.core._Callback.ListCell",
"tink.core._Callback.CallbackList_Impl_",
"tink.core.TypedError",
"tink.core._Future.Future_Impl_",
"tink.core.FutureTrigger",
"tink.core._Future.LazyTrigger",
#endif
 0 };
} // namespace hx
void __files__boot() { __hxcpp_set_debugger_info(hx::__hxcpp_all_classes, hx::__hxcpp_all_files_fullpath); }
