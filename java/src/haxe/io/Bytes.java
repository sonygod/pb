// Generated by Haxe 4.0.0-rc.5+b1fb4afca
package haxe.io;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Bytes extends haxe.lang.HxObject
{
	public Bytes(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Bytes(int length, byte[] b)
	{
		//line 34 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		haxe.io.Bytes.__hx_ctor_haxe_io_Bytes(this, length, b);
	}
	
	
	protected static void __hx_ctor_haxe_io_Bytes(haxe.io.Bytes __hx_this, int length, byte[] b)
	{
		//line 35 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		__hx_this.length = length;
		//line 36 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		__hx_this.b = b;
	}
	
	
	public static haxe.io.Bytes alloc(int length)
	{
		//line 564 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		return new haxe.io.Bytes(length, new byte[length]);
	}
	
	
	public static haxe.io.Bytes ofString(java.lang.String s, haxe.io.Encoding encoding)
	{
		//line 603 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		try 
		{
			//line 604 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			byte[] b = null;
			//line 604 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			if (( encoding == null )) 
			{
				//line 604 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				b = s.getBytes(haxe.lang.Runtime.toString("UTF-8"));
			}
			else
			{
				//line 604 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				switch (encoding)
				{
					case UTF8:
					{
						//line 604 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						b = s.getBytes(haxe.lang.Runtime.toString("UTF-8"));
						//line 604 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
					case RawNative:
					{
						//line 604 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						b = s.getBytes(haxe.lang.Runtime.toString("UTF-16LE"));
						//line 604 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 610 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			return new haxe.io.Bytes(b.length, b);
		}
		catch (java.lang.Throwable catchallException)
		{
			//line 603 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			haxe.lang.Exceptions.setException(catchallException);
			//line 612 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			java.lang.Object e = ( (haxe.root.Std.is(catchallException, haxe.lang.HaxeException.class)) ? (((haxe.lang.HaxeException) (catchallException) ).obj) : (catchallException) );
			//line 612 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			throw haxe.lang.HaxeException.wrap(e);
		}
		
		
	}
	
	
	public static haxe.io.Bytes ofHex(java.lang.String s)
	{
		//line 674 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		int len = s.length();
		//line 675 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		if (( (( len & 1 )) != 0 )) 
		{
			//line 676 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			throw haxe.lang.HaxeException.wrap("Not a hex string (odd number of digits)");
		}
		
		//line 677 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		haxe.io.Bytes ret = haxe.io.Bytes.alloc(( len >> 1 ));
		//line 678 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		{
			//line 678 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			int _g = 0;
			//line 678 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			int _g1 = ret.length;
			//line 678 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			while (( _g < _g1 ))
			{
				//line 678 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				int i = _g++;
				//line 679 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				int index = ( i * 2 );
				//line 679 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				int high = ( (( index < s.length() )) ? (((int) (((java.lang.String) (((java.lang.Object) (s) )) ).charAt(index)) )) : (-1) );
				//line 680 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				int index1 = ( ( i * 2 ) + 1 );
				//line 680 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				int low = ( (( index1 < s.length() )) ? (((int) (((java.lang.String) (((java.lang.Object) (s) )) ).charAt(index1)) )) : (-1) );
				//line 681 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				high = ( (( high & 15 )) + ( (( (( high & 64 )) >> 6 )) * 9 ) );
				//line 682 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				low = ( (( low & 15 )) + ( (( (( low & 64 )) >> 6 )) * 9 ) );
				//line 683 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				ret.b[i] = ((byte) (( (( ( high << 4 ) | low )) & 255 )) );
			}
			
		}
		
		//line 686 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		return ret;
	}
	
	
	public int length;
	
	public byte[] b;
	
	public void fill(int pos, int len, int value)
	{
		//line 146 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		int _g = 0;
		//line 146 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		int _g1 = len;
		//line 146 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		while (( _g < _g1 ))
		{
			//line 146 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			int i = _g++;
			//line 147 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			this.b[pos++] = ((byte) (value) );
		}
		
	}
	
	
	public haxe.io.Bytes sub(int pos, int len)
	{
		//line 157 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		if (( ( ( pos < 0 ) || ( len < 0 ) ) || ( ( pos + len ) > this.length ) )) 
		{
			//line 158 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			throw haxe.lang.HaxeException.wrap(haxe.io.Error.OutsideBounds);
		}
		
		//line 168 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		byte[] newarr = new byte[len];
		//line 169 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		java.lang.System.arraycopy(((java.lang.Object) (this.b) ), ((int) (pos) ), ((java.lang.Object) (newarr) ), ((int) (0) ), ((int) (len) ));
		//line 170 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		return new haxe.io.Bytes(len, newarr);
	}
	
	
	@Override public java.lang.String toString()
	{
		//line 512 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		try 
		{
			//line 512 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			return new java.lang.String(this.b, 0, this.length, "UTF-8");
		}
		catch (java.lang.Throwable catchallException)
		{
			//line 511 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			haxe.lang.Exceptions.setException(catchallException);
			//line 514 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			java.lang.Object e = ( (haxe.root.Std.is(catchallException, haxe.lang.HaxeException.class)) ? (((haxe.lang.HaxeException) (catchallException) ).obj) : (catchallException) );
			//line 514 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			throw haxe.lang.HaxeException.wrap(e);
		}
		
		
	}
	
	
	public java.lang.String toHex()
	{
		//line 525 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		haxe.root.StringBuf s = new haxe.root.StringBuf();
		//line 526 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		haxe.root.Array<java.lang.Object> chars = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 527 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		java.lang.String str = "0123456789abcdef";
		//line 528 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		{
			//line 528 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			int _g = 0;
			//line 528 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			int _g1 = str.length();
			//line 528 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			while (( _g < _g1 ))
			{
				//line 528 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				int i = _g++;
				//line 529 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				chars.push(haxe.lang.StringExt.charCodeAt(str, i));
			}
			
		}
		
		//line 530 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		{
			//line 530 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			int _g2 = 0;
			//line 530 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			int _g3 = this.length;
			//line 530 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			while (( _g2 < _g3 ))
			{
				//line 530 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				int i1 = _g2++;
				//line 531 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				int c = ( this.b[i1] & 255 );
				//line 532 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				s.addChar(((int) (haxe.lang.Runtime.toInt(chars.__get(( c >> 4 )))) ));
				//line 533 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				s.addChar(((int) (haxe.lang.Runtime.toInt(chars.__get(( c & 15 )))) ));
			}
			
		}
		
		//line 535 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		return s.toString();
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		{
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			boolean __temp_executeDef1 = true;
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			if (( field != null )) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				switch (field.hashCode())
				{
					case -1106363674:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						if (field.equals("length")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							this.length = ((int) (value) );
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							return value;
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			if (__temp_executeDef1) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		{
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			boolean __temp_executeDef1 = true;
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			if (( field != null )) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				switch (field.hashCode())
				{
					case 98:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						if (field.equals("b")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							this.b = ((byte[]) (value) );
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							return value;
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
					case -1106363674:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						if (field.equals("length")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							this.length = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							return value;
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			if (__temp_executeDef1) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		{
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			boolean __temp_executeDef1 = true;
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			if (( field != null )) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				switch (field.hashCode())
				{
					case 110507680:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						if (field.equals("toHex")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "toHex")) );
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
					case -1106363674:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						if (field.equals("length")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							return this.length;
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
					case -1776922004:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						if (field.equals("toString")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "toString")) );
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
					case 98:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						if (field.equals("b")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							return this.b;
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
					case 114240:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						if (field.equals("sub")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "sub")) );
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
					case 3143043:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						if (field.equals("fill")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "fill")) );
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			if (__temp_executeDef1) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		{
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			boolean __temp_executeDef1 = true;
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			if (( field != null )) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				switch (field.hashCode())
				{
					case -1106363674:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						if (field.equals("length")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							return ((double) (this.length) );
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			if (__temp_executeDef1) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		{
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			boolean __temp_executeDef1 = true;
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			if (( field != null )) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				switch (field.hashCode())
				{
					case 110507680:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						if (field.equals("toHex")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							return this.toHex();
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
					case 3143043:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						if (field.equals("fill")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							this.fill(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ), ((int) (haxe.lang.Runtime.toInt(dynargs[1])) ), ((int) (haxe.lang.Runtime.toInt(dynargs[2])) ));
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
					case -1776922004:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						if (field.equals("toString")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							return this.toString();
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
					case 114240:
					{
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						if (field.equals("sub")) 
						{
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							__temp_executeDef1 = false;
							//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
							return this.sub(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ), ((int) (haxe.lang.Runtime.toInt(dynargs[1])) ));
						}
						
						//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
			if (__temp_executeDef1) 
			{
				//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		baseArr.push("b");
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		baseArr.push("length");
		//line 29 "C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


