// Generated by Haxe 4.0.0-rc.5+b1fb4afca
package haxe.crypto;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Aes extends haxe.lang.HxObject
{
	static
	{
		//line 17 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.crypto.Aes.SBOX_ARRAY = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22});
		//line 36 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.crypto.Aes.RSBOX_ARRAY = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125});
		//line 55 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.crypto.Aes.POWER3_ARRAY = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246});
		//line 74 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.crypto.Aes.LOG3_ARRAY = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7});
		//line 93 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.crypto.Aes.RCON_ARRAY = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54});
	}
	
	public Aes(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Aes(haxe.io.Bytes key, haxe.io.Bytes iv)
	{
		//line 117 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.crypto.Aes.__hx_ctor_haxe_crypto_Aes(this, key, iv);
	}
	
	
	protected static void __hx_ctor_haxe_crypto_Aes(haxe.crypto.Aes __hx_this, haxe.io.Bytes key, haxe.io.Bytes iv)
	{
		//line 119 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.root.Array<java.lang.Object> array = haxe.crypto.Aes.SBOX_ARRAY;
		//line 119 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] ret = new int[array.length];
		//line 119 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 119 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g = 0;
			//line 119 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g1 = array.length;
			//line 119 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			while (( _g < _g1 ))
			{
				//line 119 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				int i = _g++;
				//line 119 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				ret[i] = ((int) (haxe.lang.Runtime.toInt(array.__get(i))) );
			}
			
		}
		
		//line 119 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.crypto.Aes.SBOX = ((int[]) (ret) );
		//line 120 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.root.Array<java.lang.Object> array1 = haxe.crypto.Aes.RSBOX_ARRAY;
		//line 120 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] ret1 = new int[array1.length];
		//line 120 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 120 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g2 = 0;
			//line 120 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g11 = array1.length;
			//line 120 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			while (( _g2 < _g11 ))
			{
				//line 120 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				int i1 = _g2++;
				//line 120 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				ret1[i1] = ((int) (haxe.lang.Runtime.toInt(array1.__get(i1))) );
			}
			
		}
		
		//line 120 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.crypto.Aes.RSBOX = ((int[]) (ret1) );
		//line 121 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.root.Array<java.lang.Object> array2 = haxe.crypto.Aes.POWER3_ARRAY;
		//line 121 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] ret2 = new int[array2.length];
		//line 121 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 121 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g3 = 0;
			//line 121 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g12 = array2.length;
			//line 121 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			while (( _g3 < _g12 ))
			{
				//line 121 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				int i2 = _g3++;
				//line 121 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				ret2[i2] = ((int) (haxe.lang.Runtime.toInt(array2.__get(i2))) );
			}
			
		}
		
		//line 121 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.crypto.Aes.POWER3 = ((int[]) (ret2) );
		//line 122 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.root.Array<java.lang.Object> array3 = haxe.crypto.Aes.LOG3_ARRAY;
		//line 122 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] ret3 = new int[array3.length];
		//line 122 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 122 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g4 = 0;
			//line 122 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g13 = array3.length;
			//line 122 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			while (( _g4 < _g13 ))
			{
				//line 122 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				int i3 = _g4++;
				//line 122 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				ret3[i3] = ((int) (haxe.lang.Runtime.toInt(array3.__get(i3))) );
			}
			
		}
		
		//line 122 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.crypto.Aes.LOG3 = ((int[]) (ret3) );
		//line 123 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.root.Array<java.lang.Object> array4 = haxe.crypto.Aes.RCON_ARRAY;
		//line 123 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] ret4 = new int[array4.length];
		//line 123 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 123 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g5 = 0;
			//line 123 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g14 = array4.length;
			//line 123 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			while (( _g5 < _g14 ))
			{
				//line 123 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				int i4 = _g5++;
				//line 123 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				ret4[i4] = ((int) (haxe.lang.Runtime.toInt(array4.__get(i4))) );
			}
			
		}
		
		//line 123 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.crypto.Aes.RCON = ((int[]) (ret4) );
		//line 125 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[][] this1 = new int[4][];
		//line 125 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		__hx_this.state = ((int[][]) (this1) );
		//line 126 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		if (( key != null )) 
		{
			//line 126 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			__hx_this.init(key, iv);
		}
		
	}
	
	
	public static int[] SBOX;
	
	public static int[] RSBOX;
	
	public static int[] POWER3;
	
	public static int[] LOG3;
	
	public static int[] RCON;
	
	public static haxe.root.Array<java.lang.Object> SBOX_ARRAY;
	
	public static haxe.root.Array<java.lang.Object> RSBOX_ARRAY;
	
	public static haxe.root.Array<java.lang.Object> POWER3_ARRAY;
	
	public static haxe.root.Array<java.lang.Object> LOG3_ARRAY;
	
	public static haxe.root.Array<java.lang.Object> RCON_ARRAY;
	
	public int[] roundKey;
	
	public int[][] state;
	
	public int Nk;
	
	public int Nr;
	
	public haxe.io.Bytes iv;
	
	public haxe.io.Bytes set_iv(haxe.io.Bytes vector)
	{
		//line 108 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		this.iv = vector;
		//line 109 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		if (( this.iv == null )) 
		{
			//line 111 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			this.iv = haxe.io.Bytes.alloc(16);
			//line 112 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			this.iv.fill(0, 16, 0);
		}
		
		//line 114 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		return this.iv;
	}
	
	
	public void init(haxe.io.Bytes key, haxe.io.Bytes iv)
	{
		//line 131 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int keyLength = key.length;
		//line 133 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		this.Nk = ( keyLength >> 2 );
		//line 134 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		this.Nr = ( this.Nk + 6 );
		//line 136 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		this.set_iv(iv);
		//line 137 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		this.roundKey = this.keyExpansion(key);
	}
	
	
	public haxe.io.Bytes encrypt(java.lang.String cipherMode, haxe.io.Bytes data, java.lang.String padding)
	{
		//line 146 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		if (( padding == null )) 
		{
			//line 146 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			padding = "PKCS7";
		}
		
		//line 147 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.io.Bytes out = null;
		//line 149 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 149 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			java.lang.String __temp_svar1 = haxe.lang.Runtime.toString((padding));
			//line 149 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			if (( __temp_svar1 != null )) 
			{
				//line 149 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				switch (__temp_svar1.hashCode())
				{
					case -448288059:
					{
						//line 158 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar1.equals("AnsiX923")) 
						{
							//line 158 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.AnsiX923.pad(data, 16);
						}
						
						//line 158 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 82837:
					{
						//line 166 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar1.equals("TBC")) 
						{
							//line 166 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.TBC.pad(data, 16);
						}
						
						//line 166 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 271702628:
					{
						//line 156 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar1.equals("BitPadding")) 
						{
							//line 156 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.BitPadding.pad(data, 16);
						}
						
						//line 156 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -1208933301:
					{
						//line 164 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar1.equals("SpacePadding")) 
						{
							//line 164 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.SpacePadding.pad(data, 16);
						}
						
						//line 164 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 1332931185:
					{
						//line 160 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar1.equals("ISO10126")) 
						{
							//line 160 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.ISO10126.pad(data, 16);
						}
						
						//line 160 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 76183020:
					{
						//line 154 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar1.equals("PKCS7")) 
						{
							//line 154 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.PKCS7.pad(data, 16);
						}
						
						//line 154 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 1789205232:
					{
						//line 152 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar1.equals("NoPadding")) 
						{
							//line 152 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.NoPadding.pad(data, 16);
						}
						
						//line 152 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -1773813654:
					{
						//line 162 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar1.equals("NullPadding")) 
						{
							//line 162 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.NullPadding.pad(data, 16);
						}
						
						//line 162 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
				}
				
			}
			
		}
		
		//line 169 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 169 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			java.lang.String __temp_svar3 = (cipherMode);
			//line 169 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			if (( __temp_svar3 != null )) 
			{
				//line 169 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				switch (__temp_svar3.hashCode())
				{
					case 98276:
					{
						//line 171 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar3.equals("cbc")) 
						{
							//line 171 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							haxe.crypto.mode.CBC.encrypt(out, this.iv, 16, ((haxe.lang.Function) (new haxe.lang.Closure(this, "encryptBlock")) ));
						}
						
						//line 171 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 3434868:
					{
						//line 175 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar3.equals("pcbc")) 
						{
							//line 175 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							haxe.crypto.mode.PCBC.encrypt(out, this.iv, 16, ((haxe.lang.Function) (new haxe.lang.Closure(this, "encryptBlock")) ));
						}
						
						//line 175 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 98399:
					{
						//line 179 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar3.equals("cfb")) 
						{
							//line 179 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							haxe.crypto.mode.CFB.encrypt(out, this.iv, 16, ((haxe.lang.Function) (new haxe.lang.Closure(this, "encryptBlock")) ));
						}
						
						//line 179 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 109931:
					{
						//line 181 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar3.equals("ofb")) 
						{
							//line 181 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							haxe.crypto.mode.OFB.encrypt(out, this.iv, 16, ((haxe.lang.Function) (new haxe.lang.Closure(this, "encryptBlock")) ));
						}
						
						//line 181 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 98849:
					{
						//line 177 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar3.equals("ctr")) 
						{
							//line 177 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							haxe.crypto.mode.CTR.encrypt(out, this.iv, 16, ((haxe.lang.Function) (new haxe.lang.Closure(this, "encryptBlock")) ));
						}
						
						//line 177 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 100228:
					{
						//line 173 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar3.equals("ecb")) 
						{
							//line 173 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							haxe.crypto.mode.ECB.encrypt(out, 16, ((haxe.lang.Function) (new haxe.lang.Closure(this, "encryptBlock")) ));
						}
						
						//line 173 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
				}
				
			}
			
		}
		
		//line 184 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		return out;
	}
	
	
	public haxe.io.Bytes decrypt(java.lang.String cipherMode, haxe.io.Bytes data, java.lang.String padding)
	{
		//line 188 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		if (( padding == null )) 
		{
			//line 188 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			padding = "PKCS7";
		}
		
		//line 189 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		haxe.io.Bytes out = data;
		//line 191 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 191 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			java.lang.String __temp_svar1 = (cipherMode);
			//line 191 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			if (( __temp_svar1 != null )) 
			{
				//line 191 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				switch (__temp_svar1.hashCode())
				{
					case 98276:
					{
						//line 193 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar1.equals("cbc")) 
						{
							//line 193 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							haxe.crypto.mode.CBC.decrypt(out, this.iv, 16, ((haxe.lang.Function) (new haxe.lang.Closure(this, "decryptBlock")) ));
						}
						
						//line 193 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 3434868:
					{
						//line 197 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar1.equals("pcbc")) 
						{
							//line 197 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							haxe.crypto.mode.PCBC.decrypt(out, this.iv, 16, ((haxe.lang.Function) (new haxe.lang.Closure(this, "decryptBlock")) ));
						}
						
						//line 197 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 98399:
					{
						//line 201 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar1.equals("cfb")) 
						{
							//line 201 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							haxe.crypto.mode.CFB.decrypt(out, this.iv, 16, ((haxe.lang.Function) (new haxe.lang.Closure(this, "encryptBlock")) ));
						}
						
						//line 201 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 109931:
					{
						//line 203 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar1.equals("ofb")) 
						{
							//line 203 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							haxe.crypto.mode.OFB.decrypt(out, this.iv, 16, ((haxe.lang.Function) (new haxe.lang.Closure(this, "encryptBlock")) ));
						}
						
						//line 203 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 98849:
					{
						//line 199 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar1.equals("ctr")) 
						{
							//line 199 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							haxe.crypto.mode.CTR.decrypt(out, this.iv, 16, ((haxe.lang.Function) (new haxe.lang.Closure(this, "encryptBlock")) ));
						}
						
						//line 199 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 100228:
					{
						//line 195 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar1.equals("ecb")) 
						{
							//line 195 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							haxe.crypto.mode.ECB.decrypt(out, 16, ((haxe.lang.Function) (new haxe.lang.Closure(this, "decryptBlock")) ));
						}
						
						//line 195 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
				}
				
			}
			
		}
		
		//line 206 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 206 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			java.lang.String __temp_svar3 = haxe.lang.Runtime.toString((padding));
			//line 206 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			if (( __temp_svar3 != null )) 
			{
				//line 206 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				switch (__temp_svar3.hashCode())
				{
					case -448288059:
					{
						//line 214 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar3.equals("AnsiX923")) 
						{
							//line 214 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.AnsiX923.unpad(out);
						}
						
						//line 214 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 82837:
					{
						//line 222 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar3.equals("TBC")) 
						{
							//line 222 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.TBC.unpad(out);
						}
						
						//line 222 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 271702628:
					{
						//line 212 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar3.equals("BitPadding")) 
						{
							//line 212 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.BitPadding.unpad(out);
						}
						
						//line 212 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -1208933301:
					{
						//line 220 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar3.equals("SpacePadding")) 
						{
							//line 220 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.SpacePadding.unpad(out);
						}
						
						//line 220 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 1332931185:
					{
						//line 216 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar3.equals("ISO10126")) 
						{
							//line 216 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.ISO10126.unpad(out);
						}
						
						//line 216 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 76183020:
					{
						//line 210 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar3.equals("PKCS7")) 
						{
							//line 210 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.PKCS7.unpad(out);
						}
						
						//line 210 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 1789205232:
					{
						//line 208 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar3.equals("NoPadding")) 
						{
							//line 208 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.NoPadding.unpad(out);
						}
						
						//line 208 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -1773813654:
					{
						//line 218 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (__temp_svar3.equals("NullPadding")) 
						{
							//line 218 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							out = haxe.crypto.padding.NullPadding.unpad(out);
						}
						
						//line 218 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
				}
				
			}
			
		}
		
		//line 225 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		return out;
	}
	
	
	public void encryptBlock(haxe.io.Bytes src, int srcIndex, haxe.io.Bytes dst, int dstIndex)
	{
		//line 230 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 231 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[][]) (this.state) )[0] = new int[]{( src.b[srcIndex] & 255 ), ( src.b[( srcIndex + 1 )] & 255 ), ( src.b[( srcIndex + 2 )] & 255 ), ( src.b[( srcIndex + 3 )] & 255 )};
			//line 231 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[][]) (this.state) )[1] = new int[]{( src.b[( 4 + srcIndex )] & 255 ), ( src.b[( ( 4 + srcIndex ) + 1 )] & 255 ), ( src.b[( ( 4 + srcIndex ) + 2 )] & 255 ), ( src.b[( ( 4 + srcIndex ) + 3 )] & 255 )};
			//line 231 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[][]) (this.state) )[2] = new int[]{( src.b[( 8 + srcIndex )] & 255 ), ( src.b[( ( 8 + srcIndex ) + 1 )] & 255 ), ( src.b[( ( 8 + srcIndex ) + 2 )] & 255 ), ( src.b[( ( 8 + srcIndex ) + 3 )] & 255 )};
			//line 231 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[][]) (this.state) )[3] = new int[]{( src.b[( 12 + srcIndex )] & 255 ), ( src.b[( ( 12 + srcIndex ) + 1 )] & 255 ), ( src.b[( ( 12 + srcIndex ) + 2 )] & 255 ), ( src.b[( ( 12 + srcIndex ) + 3 )] & 255 )};
		}
		
		//line 234 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		this.addRoundKey(0);
		//line 236 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 236 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g = 1;
			//line 236 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g1 = this.Nr;
			//line 236 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			while (( _g < _g1 ))
			{
				//line 236 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				int round = _g++;
				//line 238 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				this.subBytes();
				//line 239 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				this.shiftRows();
				//line 240 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				this.mixColumns();
				//line 241 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				this.addRoundKey(round);
			}
			
		}
		
		//line 244 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		this.subBytes();
		//line 245 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		this.shiftRows();
		//line 246 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		this.addRoundKey(this.Nr);
		//line 248 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 249 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[dstIndex] = ((byte) (((int[]) (((int[][]) (this.state) )[0]) )[0]) );
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 1 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[0]) )[1]) );
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 2 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[0]) )[2]) );
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 3 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[0]) )[3]) );
			}
			
			//line 249 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 4 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[1]) )[0]) );
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 5 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[1]) )[1]) );
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 6 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[1]) )[2]) );
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 7 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[1]) )[3]) );
			}
			
			//line 249 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 8 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[2]) )[0]) );
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 9 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[2]) )[1]) );
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 10 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[2]) )[2]) );
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 11 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[2]) )[3]) );
			}
			
			//line 249 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 12 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[3]) )[0]) );
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 13 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[3]) )[1]) );
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 14 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[3]) )[2]) );
				//line 250 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 15 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[3]) )[3]) );
			}
			
		}
		
	}
	
	
	public void decryptBlock(haxe.io.Bytes src, int srcIndex, haxe.io.Bytes dst, int dstIndex)
	{
		//line 257 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 258 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[][]) (this.state) )[0] = new int[]{( src.b[srcIndex] & 255 ), ( src.b[( srcIndex + 1 )] & 255 ), ( src.b[( srcIndex + 2 )] & 255 ), ( src.b[( srcIndex + 3 )] & 255 )};
			//line 258 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[][]) (this.state) )[1] = new int[]{( src.b[( 4 + srcIndex )] & 255 ), ( src.b[( ( 4 + srcIndex ) + 1 )] & 255 ), ( src.b[( ( 4 + srcIndex ) + 2 )] & 255 ), ( src.b[( ( 4 + srcIndex ) + 3 )] & 255 )};
			//line 258 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[][]) (this.state) )[2] = new int[]{( src.b[( 8 + srcIndex )] & 255 ), ( src.b[( ( 8 + srcIndex ) + 1 )] & 255 ), ( src.b[( ( 8 + srcIndex ) + 2 )] & 255 ), ( src.b[( ( 8 + srcIndex ) + 3 )] & 255 )};
			//line 258 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[][]) (this.state) )[3] = new int[]{( src.b[( 12 + srcIndex )] & 255 ), ( src.b[( ( 12 + srcIndex ) + 1 )] & 255 ), ( src.b[( ( 12 + srcIndex ) + 2 )] & 255 ), ( src.b[( ( 12 + srcIndex ) + 3 )] & 255 )};
		}
		
		//line 261 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		this.addRoundKey(this.Nr);
		//line 263 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int round = ( this.Nr - 1 );
		//line 264 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		while (( round > 0 ))
		{
			//line 266 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			this.invShiftRows();
			//line 267 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			this.invSubBytes();
			//line 268 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			this.addRoundKey(round);
			//line 269 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			this.invMixColumns();
			//line 270 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			 -- round;
		}
		
		//line 273 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		this.invShiftRows();
		//line 274 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		this.invSubBytes();
		//line 275 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		this.addRoundKey(0);
		//line 277 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 278 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[dstIndex] = ((byte) (((int[]) (((int[][]) (this.state) )[0]) )[0]) );
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 1 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[0]) )[1]) );
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 2 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[0]) )[2]) );
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 3 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[0]) )[3]) );
			}
			
			//line 278 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 4 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[1]) )[0]) );
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 5 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[1]) )[1]) );
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 6 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[1]) )[2]) );
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 7 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[1]) )[3]) );
			}
			
			//line 278 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 8 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[2]) )[0]) );
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 9 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[2]) )[1]) );
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 10 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[2]) )[2]) );
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 11 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[2]) )[3]) );
			}
			
			//line 278 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 12 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[3]) )[0]) );
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 13 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[3]) )[1]) );
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 14 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[3]) )[2]) );
				//line 279 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				dst.b[( 15 + dstIndex )] = ((byte) (((int[]) (((int[][]) (this.state) )[3]) )[3]) );
			}
			
		}
		
	}
	
	
	public int[] rotWord(int[] w)
	{
		//line 286 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int tmp = ((int[]) (w) )[0];
		//line 287 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 287 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (w) )[0] = ((int[]) (w) )[1];
			//line 287 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (w) )[1] = ((int[]) (w) )[2];
			//line 287 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (w) )[2] = ((int[]) (w) )[3];
		}
		
		//line 288 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		((int[]) (w) )[3] = tmp;
		//line 289 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		return w;
	}
	
	
	public int[] subWord(int[] w)
	{
		//line 294 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 294 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (w) )[0] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (w) )[0]];
			//line 294 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (w) )[1] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (w) )[1]];
			//line 294 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (w) )[2] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (w) )[2]];
			//line 294 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (w) )[3] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (w) )[3]];
		}
		
		//line 295 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		return w;
	}
	
	
	public int[] keyExpansion(haxe.io.Bytes key)
	{
		//line 301 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] this1 = new int[( 16 * (( this.Nr + 1 )) )];
		//line 301 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] roundKey = ((int[]) (this1) );
		//line 302 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] this2 = new int[4];
		//line 302 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] temp = ((int[]) (this2) );
		//line 304 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 304 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g = 0;
			//line 304 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g1 = this.Nk;
			//line 304 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			while (( _g < _g1 ))
			{
				//line 304 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				int i = _g++;
				//line 305 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 306 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (roundKey) )[( 4 * i )] = ( key.b[( 4 * i )] & 255 );
					//line 306 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (roundKey) )[( ( 4 * i ) + 1 )] = ( key.b[( ( 4 * i ) + 1 )] & 255 );
					//line 306 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (roundKey) )[( ( 4 * i ) + 2 )] = ( key.b[( ( 4 * i ) + 2 )] & 255 );
					//line 306 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (roundKey) )[( ( 4 * i ) + 3 )] = ( key.b[( ( 4 * i ) + 3 )] & 255 );
				}
				
			}
			
		}
		
		//line 310 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 310 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g2 = this.Nk;
			//line 310 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g3 = ( 4 * (( this.Nr + 1 )) );
			//line 310 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			while (( _g2 < _g3 ))
			{
				//line 310 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				int i1 = _g2++;
				//line 311 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 311 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (temp) )[0] = ((int[]) (roundKey) )[( 4 * (( i1 - 1 )) )];
					//line 311 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (temp) )[1] = ((int[]) (roundKey) )[( ( 4 * (( i1 - 1 )) ) + 1 )];
					//line 311 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (temp) )[2] = ((int[]) (roundKey) )[( ( 4 * (( i1 - 1 )) ) + 2 )];
					//line 311 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (temp) )[3] = ((int[]) (roundKey) )[( ( 4 * (( i1 - 1 )) ) + 3 )];
				}
				
				//line 312 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				if (( ( i1 % this.Nk ) == 0 )) 
				{
					//line 313 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					temp = this.subWord(this.rotWord(temp));
					//line 314 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					int k = ((int) (( ((double) (i1) ) / this.Nk )) );
					//line 315 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (temp) )[0] ^= ((int[]) (haxe.crypto.Aes.RCON) )[k];
				}
				else
				{
					//line 316 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					if (( ( this.Nk > 6 ) && ( ( i1 % this.Nk ) == 4 ) )) 
					{
						//line 317 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						temp = this.subWord(temp);
					}
					
				}
				
				//line 319 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				int k1 = ( i1 * 4 );
				//line 320 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				int m = ( (( i1 - this.Nk )) * 4 );
				//line 321 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 321 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (roundKey) )[k1] = ( ((int[]) (roundKey) )[m] ^ ((int[]) (temp) )[0] );
					//line 321 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (roundKey) )[( k1 + 1 )] = ( ((int[]) (roundKey) )[( m + 1 )] ^ ((int[]) (temp) )[1] );
					//line 321 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (roundKey) )[( k1 + 2 )] = ( ((int[]) (roundKey) )[( m + 2 )] ^ ((int[]) (temp) )[2] );
					//line 321 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (roundKey) )[( k1 + 3 )] = ( ((int[]) (roundKey) )[( m + 3 )] ^ ((int[]) (temp) )[3] );
				}
				
			}
			
		}
		
		//line 323 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		return roundKey;
	}
	
	
	public void addRoundKey(int round)
	{
		//line 328 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		round <<= 2;
		//line 329 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[0]) )[0] ^= ((int[]) (this.roundKey) )[( round * 4 )];
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[0]) )[1] ^= ((int[]) (this.roundKey) )[( ( round * 4 ) + 1 )];
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[0]) )[2] ^= ((int[]) (this.roundKey) )[( ( round * 4 ) + 2 )];
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[0]) )[3] ^= ((int[]) (this.roundKey) )[( ( round * 4 ) + 3 )];
			}
			
			//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[1]) )[0] ^= ((int[]) (this.roundKey) )[( ( round * 4 ) + 4 )];
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[1]) )[1] ^= ((int[]) (this.roundKey) )[( ( ( round * 4 ) + 4 ) + 1 )];
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[1]) )[2] ^= ((int[]) (this.roundKey) )[( ( ( round * 4 ) + 4 ) + 2 )];
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[1]) )[3] ^= ((int[]) (this.roundKey) )[( ( ( round * 4 ) + 4 ) + 3 )];
			}
			
			//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[2]) )[0] ^= ((int[]) (this.roundKey) )[( ( round * 4 ) + 8 )];
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[2]) )[1] ^= ((int[]) (this.roundKey) )[( ( ( round * 4 ) + 8 ) + 1 )];
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[2]) )[2] ^= ((int[]) (this.roundKey) )[( ( ( round * 4 ) + 8 ) + 2 )];
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[2]) )[3] ^= ((int[]) (this.roundKey) )[( ( ( round * 4 ) + 8 ) + 3 )];
			}
			
			//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[3]) )[0] ^= ((int[]) (this.roundKey) )[( ( round * 4 ) + 12 )];
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[3]) )[1] ^= ((int[]) (this.roundKey) )[( ( ( round * 4 ) + 12 ) + 1 )];
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[3]) )[2] ^= ((int[]) (this.roundKey) )[( ( ( round * 4 ) + 12 ) + 2 )];
				//line 331 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				((int[]) (((int[][]) (this.state) )[3]) )[3] ^= ((int[]) (this.roundKey) )[( ( ( round * 4 ) + 12 ) + 3 )];
			}
			
		}
		
	}
	
	
	public void subBytes()
	{
		//line 339 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[0]) )[0] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[0]) )[0]];
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[0]) )[1] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[0]) )[1]];
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[0]) )[2] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[0]) )[2]];
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[0]) )[3] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[0]) )[3]];
		}
		
		//line 339 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[1]) )[0] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[1]) )[0]];
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[1]) )[1] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[1]) )[1]];
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[1]) )[2] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[1]) )[2]];
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[1]) )[3] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[1]) )[3]];
		}
		
		//line 339 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[2]) )[0] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[2]) )[0]];
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[2]) )[1] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[2]) )[1]];
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[2]) )[2] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[2]) )[2]];
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[2]) )[3] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[2]) )[3]];
		}
		
		//line 339 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[3]) )[0] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[3]) )[0]];
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[3]) )[1] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[3]) )[1]];
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[3]) )[2] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[3]) )[2]];
			//line 340 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[3]) )[3] = ((int[]) (haxe.crypto.Aes.SBOX) )[((int[]) (((int[][]) (this.state) )[3]) )[3]];
		}
		
	}
	
	
	public void shiftRows()
	{
		//line 347 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] this1 = new int[4];
		//line 347 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] t = ((int[]) (this1) );
		//line 348 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 348 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 349 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 350 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[0] = ((int[]) (((int[][]) (this.state) )[( 1 % 4 )]) )[1];
					//line 350 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[1] = ((int[]) (((int[][]) (this.state) )[( 2 % 4 )]) )[1];
					//line 350 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[2] = ((int[]) (((int[][]) (this.state) )[( 3 % 4 )]) )[1];
					//line 350 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[3] = ((int[]) (((int[][]) (this.state) )[( 4 % 4 )]) )[1];
				}
				
				//line 351 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 352 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[0]) )[1] = ((int[]) (t) )[0];
					//line 352 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[1]) )[1] = ((int[]) (t) )[1];
					//line 352 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[2]) )[1] = ((int[]) (t) )[2];
					//line 352 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[3]) )[1] = ((int[]) (t) )[3];
				}
				
			}
			
			//line 348 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 349 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 350 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[0] = ((int[]) (((int[][]) (this.state) )[( 2 % 4 )]) )[2];
					//line 350 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[1] = ((int[]) (((int[][]) (this.state) )[( 3 % 4 )]) )[2];
					//line 350 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[2] = ((int[]) (((int[][]) (this.state) )[( 4 % 4 )]) )[2];
					//line 350 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[3] = ((int[]) (((int[][]) (this.state) )[( 5 % 4 )]) )[2];
				}
				
				//line 351 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 352 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[0]) )[2] = ((int[]) (t) )[0];
					//line 352 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[1]) )[2] = ((int[]) (t) )[1];
					//line 352 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[2]) )[2] = ((int[]) (t) )[2];
					//line 352 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[3]) )[2] = ((int[]) (t) )[3];
				}
				
			}
			
			//line 348 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 349 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 350 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[0] = ((int[]) (((int[][]) (this.state) )[( 3 % 4 )]) )[3];
					//line 350 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[1] = ((int[]) (((int[][]) (this.state) )[( 4 % 4 )]) )[3];
					//line 350 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[2] = ((int[]) (((int[][]) (this.state) )[( 5 % 4 )]) )[3];
					//line 350 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[3] = ((int[]) (((int[][]) (this.state) )[( 6 % 4 )]) )[3];
				}
				
				//line 351 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 352 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[0]) )[3] = ((int[]) (t) )[0];
					//line 352 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[1]) )[3] = ((int[]) (t) )[1];
					//line 352 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[2]) )[3] = ((int[]) (t) )[2];
					//line 352 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[3]) )[3] = ((int[]) (t) )[3];
				}
				
			}
			
		}
		
	}
	
	
	public void mixColumns()
	{
		//line 358 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] this1 = new int[4];
		//line 358 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] t = ((int[]) (this1) );
		//line 359 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 359 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g = 0;
			//line 359 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			while (( _g < 4 ))
			{
				//line 359 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				int i = _g++;
				//line 360 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 361 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[0] = ((int[]) (((int[][]) (this.state) )[i]) )[0];
					//line 361 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[1] = ((int[]) (((int[][]) (this.state) )[i]) )[1];
					//line 361 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[2] = ((int[]) (((int[][]) (this.state) )[i]) )[2];
					//line 361 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[3] = ((int[]) (((int[][]) (this.state) )[i]) )[3];
				}
				
				//line 363 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 364 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[i]) )[0] = ( ( ( this.mul(2, ((int[]) (t) )[0]) ^ this.mul(3, ((int[]) (t) )[( 1 % 4 )]) ) ^ this.mul(1, ((int[]) (t) )[( 2 % 4 )]) ) ^ this.mul(1, ((int[]) (t) )[( 3 % 4 )]) );
					//line 364 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[i]) )[1] = ( ( ( this.mul(2, ((int[]) (t) )[1]) ^ this.mul(3, ((int[]) (t) )[( 2 % 4 )]) ) ^ this.mul(1, ((int[]) (t) )[( 3 % 4 )]) ) ^ this.mul(1, ((int[]) (t) )[( 4 % 4 )]) );
					//line 364 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[i]) )[2] = ( ( ( this.mul(2, ((int[]) (t) )[2]) ^ this.mul(3, ((int[]) (t) )[( 3 % 4 )]) ) ^ this.mul(1, ((int[]) (t) )[( 4 % 4 )]) ) ^ this.mul(1, ((int[]) (t) )[( 5 % 4 )]) );
					//line 364 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[i]) )[3] = ( ( ( this.mul(2, ((int[]) (t) )[3]) ^ this.mul(3, ((int[]) (t) )[( 4 % 4 )]) ) ^ this.mul(1, ((int[]) (t) )[( 5 % 4 )]) ) ^ this.mul(1, ((int[]) (t) )[( 6 % 4 )]) );
				}
				
			}
			
		}
		
	}
	
	
	public int mul(int a, int b)
	{
		//line 374 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		if (( ( a != 0 ) && ( b != 0 ) )) 
		{
			//line 374 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			return ((int[]) (haxe.crypto.Aes.POWER3) )[( (( ((int[]) (haxe.crypto.Aes.LOG3) )[a] + ((int[]) (haxe.crypto.Aes.LOG3) )[b] )) % 255 )];
		}
		else
		{
			//line 374 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			return 0;
		}
		
	}
	
	
	public void invMixColumns()
	{
		//line 379 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] this1 = new int[4];
		//line 379 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] t = ((int[]) (this1) );
		//line 380 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 380 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			int _g = 0;
			//line 380 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			while (( _g < 4 ))
			{
				//line 380 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				int i = _g++;
				//line 381 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 382 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[0] = ((int[]) (((int[][]) (this.state) )[i]) )[0];
					//line 382 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[1] = ((int[]) (((int[][]) (this.state) )[i]) )[1];
					//line 382 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[2] = ((int[]) (((int[][]) (this.state) )[i]) )[2];
					//line 382 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[3] = ((int[]) (((int[][]) (this.state) )[i]) )[3];
				}
				
				//line 383 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 384 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[i]) )[0] = ( ( ( this.mul(14, ((int[]) (t) )[0]) ^ this.mul(11, ((int[]) (t) )[( 1 % 4 )]) ) ^ this.mul(13, ((int[]) (t) )[( 2 % 4 )]) ) ^ this.mul(9, ((int[]) (t) )[( 3 % 4 )]) );
					//line 384 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[i]) )[1] = ( ( ( this.mul(14, ((int[]) (t) )[1]) ^ this.mul(11, ((int[]) (t) )[( 2 % 4 )]) ) ^ this.mul(13, ((int[]) (t) )[( 3 % 4 )]) ) ^ this.mul(9, ((int[]) (t) )[( 4 % 4 )]) );
					//line 384 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[i]) )[2] = ( ( ( this.mul(14, ((int[]) (t) )[2]) ^ this.mul(11, ((int[]) (t) )[( 3 % 4 )]) ) ^ this.mul(13, ((int[]) (t) )[( 4 % 4 )]) ) ^ this.mul(9, ((int[]) (t) )[( 5 % 4 )]) );
					//line 384 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[i]) )[3] = ( ( ( this.mul(14, ((int[]) (t) )[3]) ^ this.mul(11, ((int[]) (t) )[( 4 % 4 )]) ) ^ this.mul(13, ((int[]) (t) )[( 5 % 4 )]) ) ^ this.mul(9, ((int[]) (t) )[( 6 % 4 )]) );
				}
				
			}
			
		}
		
	}
	
	
	public void invSubBytes()
	{
		//line 395 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[0]) )[0] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[0]) )[0]];
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[1]) )[0] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[1]) )[0]];
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[2]) )[0] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[2]) )[0]];
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[3]) )[0] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[3]) )[0]];
		}
		
		//line 395 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[0]) )[1] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[0]) )[1]];
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[1]) )[1] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[1]) )[1]];
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[2]) )[1] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[2]) )[1]];
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[3]) )[1] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[3]) )[1]];
		}
		
		//line 395 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[0]) )[2] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[0]) )[2]];
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[1]) )[2] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[1]) )[2]];
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[2]) )[2] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[2]) )[2]];
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[3]) )[2] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[3]) )[2]];
		}
		
		//line 395 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[0]) )[3] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[0]) )[3]];
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[1]) )[3] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[1]) )[3]];
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[2]) )[3] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[2]) )[3]];
			//line 396 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			((int[]) (((int[][]) (this.state) )[3]) )[3] = ((int[]) (haxe.crypto.Aes.RSBOX) )[((int[]) (((int[][]) (this.state) )[3]) )[3]];
		}
		
	}
	
	
	public void invShiftRows()
	{
		//line 401 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] this1 = new int[4];
		//line 401 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		int[] t = ((int[]) (this1) );
		//line 402 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 402 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 403 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 404 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[0] = ((int[]) (((int[][]) (this.state) )[( 3 % 4 )]) )[1];
					//line 404 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[1] = ((int[]) (((int[][]) (this.state) )[( 4 % 4 )]) )[1];
					//line 404 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[2] = ((int[]) (((int[][]) (this.state) )[( 5 % 4 )]) )[1];
					//line 404 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[3] = ((int[]) (((int[][]) (this.state) )[( 6 % 4 )]) )[1];
				}
				
				//line 405 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 406 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[0]) )[1] = ((int[]) (t) )[0];
					//line 406 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[1]) )[1] = ((int[]) (t) )[1];
					//line 406 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[2]) )[1] = ((int[]) (t) )[2];
					//line 406 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[3]) )[1] = ((int[]) (t) )[3];
				}
				
			}
			
			//line 402 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 403 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 404 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[0] = ((int[]) (((int[][]) (this.state) )[( 2 % 4 )]) )[2];
					//line 404 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[1] = ((int[]) (((int[][]) (this.state) )[( 3 % 4 )]) )[2];
					//line 404 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[2] = ((int[]) (((int[][]) (this.state) )[( 4 % 4 )]) )[2];
					//line 404 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[3] = ((int[]) (((int[][]) (this.state) )[( 5 % 4 )]) )[2];
				}
				
				//line 405 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 406 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[0]) )[2] = ((int[]) (t) )[0];
					//line 406 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[1]) )[2] = ((int[]) (t) )[1];
					//line 406 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[2]) )[2] = ((int[]) (t) )[2];
					//line 406 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[3]) )[2] = ((int[]) (t) )[3];
				}
				
			}
			
			//line 402 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			{
				//line 403 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 404 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[0] = ((int[]) (((int[][]) (this.state) )[( 1 % 4 )]) )[3];
					//line 404 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[1] = ((int[]) (((int[][]) (this.state) )[( 2 % 4 )]) )[3];
					//line 404 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[2] = ((int[]) (((int[][]) (this.state) )[( 3 % 4 )]) )[3];
					//line 404 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (t) )[3] = ((int[]) (((int[][]) (this.state) )[( 4 % 4 )]) )[3];
				}
				
				//line 405 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				{
					//line 406 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[0]) )[3] = ((int[]) (t) )[0];
					//line 406 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[1]) )[3] = ((int[]) (t) )[1];
					//line 406 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[2]) )[3] = ((int[]) (t) )[2];
					//line 406 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
					((int[]) (((int[][]) (this.state) )[3]) )[3] = ((int[]) (t) )[3];
				}
				
			}
			
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			boolean __temp_executeDef1 = true;
			//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			if (( field != null )) 
			{
				//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				switch (field.hashCode())
				{
					case 2532:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("Nr")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.Nr = ((int) (value) );
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return value;
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 2525:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("Nk")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.Nk = ((int) (value) );
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return value;
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			if (__temp_executeDef1) 
			{
				//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			boolean __temp_executeDef1 = true;
			//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			if (( field != null )) 
			{
				//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				switch (field.hashCode())
				{
					case 3373:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("iv")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							if (handleProperties) 
							{
								//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
								this.set_iv(((haxe.io.Bytes) (value) ));
								//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
								return value;
							}
							else
							{
								//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
								this.iv = ((haxe.io.Bytes) (value) );
								//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
								return value;
							}
							
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -171535:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("roundKey")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.roundKey = ((int[]) (value) );
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return value;
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 2532:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("Nr")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.Nr = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return value;
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 109757585:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("state")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.state = ((int[][]) (value) );
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return value;
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 2525:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("Nk")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.Nk = ((int) (haxe.lang.Runtime.toInt(value)) );
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return value;
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			if (__temp_executeDef1) 
			{
				//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			boolean __temp_executeDef1 = true;
			//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			if (( field != null )) 
			{
				//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				switch (field.hashCode())
				{
					case 1756117130:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("invShiftRows")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "invShiftRows")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -171535:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("roundKey")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return this.roundKey;
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -415795940:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("invSubBytes")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "invSubBytes")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 109757585:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("state")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return this.state;
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 1527178418:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("invMixColumns")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "invMixColumns")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 2525:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("Nk")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return this.Nk;
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 108484:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("mul")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "mul")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 2532:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("Nr")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return this.Nr;
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 548923873:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("mixColumns")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "mixColumns")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 3373:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("iv")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return this.iv;
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 893276539:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("shiftRows")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "shiftRows")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -905788886:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("set_iv")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "set_iv")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -2106197493:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("subBytes")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "subBytes")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 3237136:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("init")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "init")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -974451278:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("addRoundKey")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "addRoundKey")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -1607257499:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("encrypt")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "encrypt")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -457963232:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("keyExpansion")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "keyExpansion")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 1542543757:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("decrypt")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "decrypt")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -1868441238:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("subWord")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "subWord")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -1976936152:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("encryptBlock")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "encryptBlock")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 1383870849:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("rotWord")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "rotWord")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 1181641472:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("decryptBlock")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "decryptBlock")) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			if (__temp_executeDef1) 
			{
				//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			boolean __temp_executeDef1 = true;
			//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			if (( field != null )) 
			{
				//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				switch (field.hashCode())
				{
					case 2532:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("Nr")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((double) (this.Nr) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 2525:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("Nk")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return ((double) (this.Nk) );
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			if (__temp_executeDef1) 
			{
				//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		{
			//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			boolean __temp_executeDef1 = true;
			//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			if (( field != null )) 
			{
				//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				switch (field.hashCode())
				{
					case 1756117130:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("invShiftRows")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.invShiftRows();
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -905788886:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("set_iv")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return this.set_iv(((haxe.io.Bytes) (dynargs[0]) ));
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -415795940:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("invSubBytes")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.invSubBytes();
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 3237136:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("init")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.init(((haxe.io.Bytes) (dynargs[0]) ), ((haxe.io.Bytes) (dynargs[1]) ));
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 1527178418:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("invMixColumns")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.invMixColumns();
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -1607257499:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("encrypt")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return this.encrypt(haxe.lang.Runtime.toString(dynargs[0]), ((haxe.io.Bytes) (dynargs[1]) ), haxe.lang.Runtime.toString(dynargs[2]));
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 108484:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("mul")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return this.mul(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ), ((int) (haxe.lang.Runtime.toInt(dynargs[1])) ));
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 1542543757:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("decrypt")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return this.decrypt(haxe.lang.Runtime.toString(dynargs[0]), ((haxe.io.Bytes) (dynargs[1]) ), haxe.lang.Runtime.toString(dynargs[2]));
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 548923873:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("mixColumns")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.mixColumns();
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -1976936152:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("encryptBlock")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.encryptBlock(((haxe.io.Bytes) (dynargs[0]) ), ((int) (haxe.lang.Runtime.toInt(dynargs[1])) ), ((haxe.io.Bytes) (dynargs[2]) ), ((int) (haxe.lang.Runtime.toInt(dynargs[3])) ));
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 893276539:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("shiftRows")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.shiftRows();
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 1181641472:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("decryptBlock")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.decryptBlock(((haxe.io.Bytes) (dynargs[0]) ), ((int) (haxe.lang.Runtime.toInt(dynargs[1])) ), ((haxe.io.Bytes) (dynargs[2]) ), ((int) (haxe.lang.Runtime.toInt(dynargs[3])) ));
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -2106197493:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("subBytes")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.subBytes();
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case 1383870849:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("rotWord")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return this.rotWord(((int[]) (dynargs[0]) ));
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -974451278:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("addRoundKey")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							this.addRoundKey(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ));
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -1868441238:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("subWord")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return this.subWord(((int[]) (dynargs[0]) ));
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
					case -457963232:
					{
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						if (field.equals("keyExpansion")) 
						{
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							__temp_executeDef1 = false;
							//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
							return this.keyExpansion(((haxe.io.Bytes) (dynargs[0]) ));
						}
						
						//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
			if (__temp_executeDef1) 
			{
				//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		baseArr.push("iv");
		//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		baseArr.push("Nr");
		//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		baseArr.push("Nk");
		//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		baseArr.push("state");
		//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		baseArr.push("roundKey");
		//line 9 "C:\\HaxeToolkit\\haxe\\lib\\crypto\\0,3,0\\src\\haxe\\crypto\\Aes.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


