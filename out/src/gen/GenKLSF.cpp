// Generated by Haxe 4.1.0-rc.1+0545ce110
#include <hxcpp.h>

#ifndef INCLUDED_Permutation
#include <Permutation.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_gen_GenKLSF
#include <gen/GenKLSF.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_MainLoop
#include <haxe/MainLoop.h>
#endif
#ifndef INCLUDED_sys_db_Connection
#include <sys/db/Connection.h>
#endif
#ifndef INCLUDED_sys_db_ResultSet
#include <sys/db/ResultSet.h>
#endif
#ifndef INCLUDED_sys_db_Sqlite
#include <sys/db/Sqlite.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_8aa56dbbe7212cdd_11_computeAllChoices,"gen.GenKLSF","computeAllChoices",0xd333fdc0,"gen.GenKLSF.computeAllChoices","gen/GenKLSF.hx",11,0x6deb1eb9)
HX_LOCAL_STACK_FRAME(_hx_pos_8aa56dbbe7212cdd_33_gen,"gen.GenKLSF","gen",0x7e0f8328,"gen.GenKLSF.gen","gen/GenKLSF.hx",33,0x6deb1eb9)
HX_LOCAL_STACK_FRAME(_hx_pos_8aa56dbbe7212cdd_41_gen,"gen.GenKLSF","gen",0x7e0f8328,"gen.GenKLSF.gen","gen/GenKLSF.hx",41,0x6deb1eb9)
static const int _hx_array_data_140a3706_8[] = {
	(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_8aa56dbbe7212cdd_75_gen,"gen.GenKLSF","gen",0x7e0f8328,"gen.GenKLSF.gen","gen/GenKLSF.hx",75,0x6deb1eb9)
namespace gen{

void GenKLSF_obj::__construct() { }

Dynamic GenKLSF_obj::__CreateEmpty() { return new GenKLSF_obj; }

void *GenKLSF_obj::_hx_vtable = 0;

Dynamic GenKLSF_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< GenKLSF_obj > _hx_result = new GenKLSF_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GenKLSF_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1e44b794;
}

void GenKLSF_obj::computeAllChoices(::Array< ::Dynamic> data,int n,int outLen,int startIndex,int m,::Array< int > arr,int arrIndex,::Array< ::Dynamic> result){
            	HX_STACKFRAME(&_hx_pos_8aa56dbbe7212cdd_11_computeAllChoices)
HXLINE(  12)		if ((m == 0)) {
HXLINE(  15)			::Array< ::Dynamic> _hx_tmp = ( (::Array< ::Dynamic>)(_hx_array_unsafe_get(result,0)) );
HXDLIN(  15)			_hx_tmp->push(arr->copy());
HXLINE(  17)			return;
            		}
HXLINE(  20)		int endIndex = (n - m);
HXLINE(  23)		int i = startIndex;
HXLINE(  25)		while((i <= endIndex)){
HXLINE(  26)			arr[arrIndex] = ( (::Array< int >)(_hx_array_unsafe_get(data,0)) )->__get(i);
HXLINE(  27)			::gen::GenKLSF_obj::computeAllChoices(data,n,outLen,(i + 1),(m - 1),arr,(arrIndex + 1),result);
HXLINE(  29)			i = (i + 1);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(GenKLSF_obj,computeAllChoices,(void))

void GenKLSF_obj::gen(){
            	HX_STACKFRAME(&_hx_pos_8aa56dbbe7212cdd_33_gen)
HXLINE(  34)		::Array< int > _g = ::Array_obj< int >::__new(0);
HXDLIN(  34)		{
HXLINE(  34)			_g->push(1);
HXDLIN(  34)			_g->push(2);
HXDLIN(  34)			_g->push(3);
HXDLIN(  34)			_g->push(4);
HXDLIN(  34)			_g->push(5);
HXDLIN(  34)			_g->push(6);
HXDLIN(  34)			_g->push(7);
HXDLIN(  34)			_g->push(8);
HXDLIN(  34)			_g->push(9);
HXDLIN(  34)			_g->push(10);
HXDLIN(  34)			_g->push(11);
HXDLIN(  34)			_g->push(12);
HXDLIN(  34)			_g->push(13);
HXDLIN(  34)			_g->push(14);
HXDLIN(  34)			_g->push(15);
HXDLIN(  34)			_g->push(16);
HXDLIN(  34)			_g->push(17);
HXDLIN(  34)			_g->push(18);
HXDLIN(  34)			_g->push(19);
HXDLIN(  34)			_g->push(20);
            		}
HXDLIN(  34)		::Array< ::Dynamic> this1 = ::Array_obj< ::Dynamic>::__new(1);
HXDLIN(  34)		::Array< ::Dynamic> this2 = this1;
HXDLIN(  34)		::Array< ::Dynamic> ret = this2;
HXDLIN(  34)		ret->__unsafe_set(0,_g);
HXDLIN(  34)		::Array< ::Dynamic> data = ret;
HXLINE(  36)		::Array< ::Dynamic> this3 = ::Array_obj< ::Dynamic>::__new(1);
HXDLIN(  36)		::Array< ::Dynamic> this4 = this3;
HXDLIN(  36)		::Array< ::Dynamic> ret1 = this4;
HXDLIN(  36)		ret1->__unsafe_set(0,::Array_obj< ::Dynamic>::__new(0));
HXDLIN(  36)		::Array< ::Dynamic> result = ret1;
HXLINE(  38)		::gen::GenKLSF_obj::computeAllChoices(data,( (::Array< int >)(_hx_array_unsafe_get(data,0)) )->length,8,0,8,::Array_obj< int >::__new(0),0,result);
HXLINE(  40)		{
HXLINE(  40)			int _g1 = 0;
HXDLIN(  40)			while((_g1 < 6)){
            				HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1,int,k,::Array< ::Dynamic>,result) HXARGC(0)
            				void _hx_run(){
            					HX_STACKFRAME(&_hx_pos_8aa56dbbe7212cdd_41_gen)
HXLINE(  42)					::Dynamic cnx = ::sys::db::Sqlite_obj::open(((HX_("./klsfx8_",8a,25,83,72) + (k + 1)) + HX_(".db",2c,3f,23,00)));
HXLINE(  44)					::sys::db::Connection_obj::request(cnx,HX_("PRAGMA synchronous = OFF",b1,9e,3b,10));
HXLINE(  45)					::sys::db::Connection_obj::request(cnx,HX_("PRAGMA locking_mode=EXCLUSIVE",90,95,b6,b2));
HXLINE(  46)					::sys::db::Connection_obj::request(cnx,HX_("PRAGMA journal_mode=WAL",74,ce,b2,c7));
HXLINE(  47)					::sys::db::Connection_obj::request(cnx,HX_("\r\n                CREATE TABLE IF NOT EXISTS fa_game (\r\n                    id integer NOT NULL PRIMARY KEY AUTOINCREMENT,\r\n                    n1 integer  NOT NULL DEFAULT 0,\r\n                    n2 integer  NOT NULL DEFAULT 0,\r\n                    n3 integer NOT NULL DEFAULT 0,\r\n                    n4 integer NOT NULL DEFAULT 0,\r\n\t\t\t\t\tn5 integer NOT NULL DEFAULT 0,\r\n                    n6 integer NOT NULL DEFAULT 0,\r\n                    n7 integer NOT NULL DEFAULT 0,\r\n                    n8 integer NOT NULL DEFAULT 0\r\n                    \r\n                   \r\n                )\r\n                ",02,1e,51,b3));
HXLINE(  63)					::haxe::Log_obj::trace(HX_("ready?",7c,b6,91,fc),hx::SourceInfo(HX_("src/gen/GenKLSF.hx",c4,2c,35,63),63,HX_("gen.GenKLSF",06,37,0a,14),HX_("gen",90,80,4e,00)));
HXLINE(  65)					 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN(  65)					_hx_tmp(( (::Array< ::Dynamic>)(_hx_array_unsafe_get(result,0)) )->length,hx::SourceInfo(HX_("src/gen/GenKLSF.hx",c4,2c,35,63),65,HX_("gen.GenKLSF",06,37,0a,14),HX_("gen",90,80,4e,00)));
HXLINE(  66)					::Array< int > currentIndex = ::Array_obj< int >::fromData( _hx_array_data_140a3706_8,1);
HXLINE(  67)					bool wasLocking = false;
HXLINE(  68)					while(true){
HXLINE(  68)						int currentIndex1 = currentIndex->__get(0);
HXDLIN(  68)						if (!((currentIndex1 < ( (::Array< ::Dynamic>)(_hx_array_unsafe_get(result,0)) )->length))) {
HXLINE(  68)							goto _hx_goto_3;
            						}
HXLINE(  69)						::Array< int > i = ::Array_obj< int >::__new(1)->init(0,(20095 * k));
HXLINE(  70)						int total = (20095 * (k + 1));
HXLINE(  72)						::haxe::Log_obj::trace(((((HX_("start=",9b,61,fa,05) + i->__get(0)) + HX_(" end=",22,ec,e8,af)) + total) + HX_(" \n",ea,1b,00,00)),hx::SourceInfo(HX_("src/gen/GenKLSF.hx",c4,2c,35,63),72,HX_("gen.GenKLSF",06,37,0a,14),HX_("gen",90,80,4e,00)));
HXLINE(  73)						while((i->__get(0) < total)){
            							HX_BEGIN_LOCAL_FUNC_S3(hx::LocalFunc,_hx_Closure_0,::Dynamic,cnx,::Array< int >,currentIndex,::Array< int >,i) HXARGC(1)
            							void _hx_run(::Array< ::Dynamic> arr){
            								HX_STACKFRAME(&_hx_pos_8aa56dbbe7212cdd_75_gen)
HXLINE(  76)								i[0]++;
HXLINE(  77)								currentIndex[0]++;
HXLINE(  78)								::haxe::Log_obj::trace((HX_("finish",53,40,7f,86) + i->__get(0)),hx::SourceInfo(HX_("src/gen/GenKLSF.hx",c4,2c,35,63),78,HX_("gen.GenKLSF",06,37,0a,14),HX_("gen",90,80,4e,00)));
HXLINE(  79)								if ((arr->length > 0)) {
HXLINE(  80)									::sys::db::Connection_obj::request(cnx,HX_("begin;",f2,f9,d6,9a));
HXLINE(  82)									{
HXLINE(  82)										int _g11 = 0;
HXDLIN(  82)										while((_g11 < arr->length)){
HXLINE(  82)											::Array< int > e = arr->__get(_g11).StaticCast< ::Array< int > >();
HXDLIN(  82)											_g11 = (_g11 + 1);
HXLINE(  83)											int _hx_int = e->__get(0);
HXDLIN(  83)											Float q;
HXDLIN(  83)											if ((_hx_int < 0)) {
HXLINE(  83)												q = (((Float)4294967296.0) + _hx_int);
            											}
            											else {
HXLINE(  83)												q = (_hx_int + ((Float)0.0));
            											}
HXDLIN(  83)											::String q1 = ((HX_("INSERT INTO fa_game (n1,n2,n3,n4,n5,n6,n7,n8) VALUES(",a4,90,79,53) + ::Std_obj::string(q)) + HX_(",",2c,00,00,00));
HXDLIN(  83)											int int1 = e->__get(1);
HXDLIN(  83)											Float q2;
HXDLIN(  83)											if ((int1 < 0)) {
HXLINE(  83)												q2 = (((Float)4294967296.0) + int1);
            											}
            											else {
HXLINE(  83)												q2 = (int1 + ((Float)0.0));
            											}
HXDLIN(  83)											::String q3 = ((q1 + ::Std_obj::string(q2)) + HX_(",",2c,00,00,00));
HXDLIN(  83)											int int2 = e->__get(2);
HXDLIN(  83)											Float q4;
HXDLIN(  83)											if ((int2 < 0)) {
HXLINE(  83)												q4 = (((Float)4294967296.0) + int2);
            											}
            											else {
HXLINE(  83)												q4 = (int2 + ((Float)0.0));
            											}
HXDLIN(  83)											::String q5 = ((q3 + ::Std_obj::string(q4)) + HX_(",",2c,00,00,00));
HXDLIN(  83)											int int3 = e->__get(3);
HXDLIN(  83)											Float q6;
HXDLIN(  83)											if ((int3 < 0)) {
HXLINE(  83)												q6 = (((Float)4294967296.0) + int3);
            											}
            											else {
HXLINE(  83)												q6 = (int3 + ((Float)0.0));
            											}
HXDLIN(  83)											::String q7 = ((q5 + ::Std_obj::string(q6)) + HX_(",",2c,00,00,00));
HXDLIN(  83)											int int4 = e->__get(4);
HXDLIN(  83)											Float q8;
HXDLIN(  83)											if ((int4 < 0)) {
HXLINE(  83)												q8 = (((Float)4294967296.0) + int4);
            											}
            											else {
HXLINE(  83)												q8 = (int4 + ((Float)0.0));
            											}
HXDLIN(  83)											::String q9 = ((q7 + ::Std_obj::string(q8)) + HX_(",",2c,00,00,00));
HXDLIN(  83)											int int5 = e->__get(5);
HXDLIN(  83)											Float q10;
HXDLIN(  83)											if ((int5 < 0)) {
HXLINE(  83)												q10 = (((Float)4294967296.0) + int5);
            											}
            											else {
HXLINE(  83)												q10 = (int5 + ((Float)0.0));
            											}
HXDLIN(  83)											::String q11 = ((q9 + ::Std_obj::string(q10)) + HX_(",",2c,00,00,00));
HXDLIN(  83)											int int6 = e->__get(6);
HXDLIN(  83)											Float q12;
HXDLIN(  83)											if ((int6 < 0)) {
HXLINE(  83)												q12 = (((Float)4294967296.0) + int6);
            											}
            											else {
HXLINE(  83)												q12 = (int6 + ((Float)0.0));
            											}
HXDLIN(  83)											::String q13 = ((q11 + ::Std_obj::string(q12)) + HX_(",",2c,00,00,00));
HXDLIN(  83)											int int7 = e->__get(7);
HXDLIN(  83)											Float q14;
HXDLIN(  83)											if ((int7 < 0)) {
HXLINE(  83)												q14 = (((Float)4294967296.0) + int7);
            											}
            											else {
HXLINE(  83)												q14 = (int7 + ((Float)0.0));
            											}
HXDLIN(  83)											::String q15 = ((q13 + ::Std_obj::string(q14)) + HX_(")",29,00,00,00));
HXLINE(  87)											::Dynamic rs = ::sys::db::Connection_obj::request(cnx,q15);
            										}
            									}
HXLINE(  89)									::sys::db::Connection_obj::request(cnx,HX_("commit;",64,88,73,81));
            								}
            							}
            							HX_END_LOCAL_FUNC1((void))

HXLINE(  74)							::Array< ::Dynamic> this5 = ::Array_obj< ::Dynamic>::__new(1);
HXDLIN(  74)							::Array< ::Dynamic> this6 = this5;
HXDLIN(  74)							::Array< ::Dynamic> ret2 = this6;
HXDLIN(  74)							ret2->__unsafe_set(0,::Array_obj< ::Dynamic>::__new(0));
HXDLIN(  74)							::Array< ::Dynamic> result2 = ret2;
HXLINE(  75)							::Permutation_obj::gen(( (::Array< ::Dynamic>)(_hx_array_unsafe_get(result,0)) )->__get(i->__get(0)).StaticCast< ::Array< int > >(), ::Dynamic(new _hx_Closure_0(cnx,currentIndex,i)),result2);
HXLINE(  94)							::haxe::Log_obj::trace(currentIndex->__get(0),hx::SourceInfo(HX_("src/gen/GenKLSF.hx",c4,2c,35,63),94,HX_("gen.GenKLSF",06,37,0a,14),HX_("gen",90,80,4e,00)));
            						}
            					}
            					_hx_goto_3:;
            				}
            				HX_END_LOCAL_FUNC0((void))

HXLINE(  40)				_g1 = (_g1 + 1);
HXDLIN(  40)				int k = (_g1 - 1);
HXLINE(  41)				::haxe::MainLoop_obj::addThread( ::Dynamic(new _hx_Closure_1(k,result)));
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GenKLSF_obj,gen,(void))


GenKLSF_obj::GenKLSF_obj()
{
}

bool GenKLSF_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"gen") ) { outValue = gen_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"computeAllChoices") ) { outValue = computeAllChoices_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *GenKLSF_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *GenKLSF_obj_sStaticStorageInfo = 0;
#endif

hx::Class GenKLSF_obj::__mClass;

static ::String GenKLSF_obj_sStaticFields[] = {
	HX_("computeAllChoices",28,a1,0c,b9),
	HX_("gen",90,80,4e,00),
	::String(null())
};

void GenKLSF_obj::__register()
{
	GenKLSF_obj _hx_dummy;
	GenKLSF_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("gen.GenKLSF",06,37,0a,14);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &GenKLSF_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(GenKLSF_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< GenKLSF_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GenKLSF_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GenKLSF_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace gen
