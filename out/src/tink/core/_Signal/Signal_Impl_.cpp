// Generated by Haxe 4.1.0-rc.1+0545ce110
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ds_Option
#include <haxe/ds/Option.h>
#endif
#ifndef INCLUDED_tink_core_FutureTrigger
#include <tink/core/FutureTrigger.h>
#endif
#ifndef INCLUDED_tink_core_LinkObject
#include <tink/core/LinkObject.h>
#endif
#ifndef INCLUDED_tink_core_Noise
#include <tink/core/Noise.h>
#endif
#ifndef INCLUDED_tink_core_SignalObject
#include <tink/core/SignalObject.h>
#endif
#ifndef INCLUDED_tink_core_SignalTrigger
#include <tink/core/SignalTrigger.h>
#endif
#ifndef INCLUDED_tink_core_SimpleLink
#include <tink/core/SimpleLink.h>
#endif
#ifndef INCLUDED_tink_core__Callback_CallbackLink_Impl_
#include <tink/core/_Callback/CallbackLink_Impl_.h>
#endif
#ifndef INCLUDED_tink_core__Callback_CallbackList_Impl_
#include <tink/core/_Callback/CallbackList_Impl_.h>
#endif
#ifndef INCLUDED_tink_core__Callback_Callback_Impl_
#include <tink/core/_Callback/Callback_Impl_.h>
#endif
#ifndef INCLUDED_tink_core__Callback_LinkPair
#include <tink/core/_Callback/LinkPair.h>
#endif
#ifndef INCLUDED_tink_core__Callback_ListCell
#include <tink/core/_Callback/ListCell.h>
#endif
#ifndef INCLUDED_tink_core__Future_FutureObject
#include <tink/core/_Future/FutureObject.h>
#endif
#ifndef INCLUDED_tink_core__Signal_Signal_Impl_
#include <tink/core/_Signal/Signal_Impl_.h>
#endif
#ifndef INCLUDED_tink_core__Signal_SimpleSignal
#include <tink/core/_Signal/SimpleSignal.h>
#endif
#ifndef INCLUDED_tink_core__Signal_Suspendable
#include <tink/core/_Signal/Suspendable.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_9__new,"tink.core._Signal.Signal_Impl_","_new",0x7515da8d,"tink.core._Signal.Signal_Impl_._new","tink/core/Signal.hx",9,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_16_map,"tink.core._Signal.Signal_Impl_","map",0x09c00ef0,"tink.core._Signal.Signal_Impl_.map","tink/core/Signal.hx",16,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_15_map,"tink.core._Signal.Signal_Impl_","map",0x09c00ef0,"tink.core._Signal.Signal_Impl_.map","tink/core/Signal.hx",15,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_27_flatMap,"tink.core._Signal.Signal_Impl_","flatMap",0xa2c5ceb7,"tink.core._Signal.Signal_Impl_.flatMap","tink/core/Signal.hx",27,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_26_flatMap,"tink.core._Signal.Signal_Impl_","flatMap",0xa2c5ceb7,"tink.core._Signal.Signal_Impl_.flatMap","tink/core/Signal.hx",26,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_37_filter,"tink.core._Signal.Signal_Impl_","filter",0x3a4887e4,"tink.core._Signal.Signal_Impl_.filter","tink/core/Signal.hx",37,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_36_filter,"tink.core._Signal.Signal_Impl_","filter",0x3a4887e4,"tink.core._Signal.Signal_Impl_.filter","tink/core/Signal.hx",36,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_44_select,"tink.core._Signal.Signal_Impl_","select",0x1f468328,"tink.core._Signal.Signal_Impl_.select","tink/core/Signal.hx",44,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_43_select,"tink.core._Signal.Signal_Impl_","select",0x1f468328,"tink.core._Signal.Signal_Impl_.select","tink/core/Signal.hx",43,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_60_join,"tink.core._Signal.Signal_Impl_","join",0x7c5bf916,"tink.core._Signal.Signal_Impl_.join","tink/core/Signal.hx",60,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_57_join,"tink.core._Signal.Signal_Impl_","join",0x7c5bf916,"tink.core._Signal.Signal_Impl_.join","tink/core/Signal.hx",57,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_75_nextTime,"tink.core._Signal.Signal_Impl_","nextTime",0xa7a83dcc,"tink.core._Signal.Signal_Impl_.nextTime","tink/core/Signal.hx",75,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_70_nextTime,"tink.core._Signal.Signal_Impl_","nextTime",0xa7a83dcc,"tink.core._Signal.Signal_Impl_.nextTime","tink/core/Signal.hx",70,0x5ae99903)
static const bool _hx_array_data_a72baac2_17[] = {
	0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_89_until,"tink.core._Signal.Signal_Impl_","until",0xa8e579f2,"tink.core._Signal.Signal_Impl_.until","tink/core/Signal.hx",89,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_87_until,"tink.core._Signal.Signal_Impl_","until",0xa8e579f2,"tink.core._Signal.Signal_Impl_.until","tink/core/Signal.hx",87,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_97_next,"tink.core._Signal.Signal_Impl_","next",0x7ef94a1f,"tink.core._Signal.Signal_Impl_.next","tink/core/Signal.hx",97,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_103_noise,"tink.core._Signal.Signal_Impl_","noise",0xa1b850ee,"tink.core._Signal.Signal_Impl_.noise","tink/core/Signal.hx",103,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_112_gather,"tink.core._Signal.Signal_Impl_","gather",0x0aafda27,"tink.core._Signal.Signal_Impl_.gather","tink/core/Signal.hx",112,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_110_gather,"tink.core._Signal.Signal_Impl_","gather",0x0aafda27,"tink.core._Signal.Signal_Impl_.gather","tink/core/Signal.hx",110,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_116_generate,"tink.core._Signal.Signal_Impl_","generate",0x88812a61,"tink.core._Signal.Signal_Impl_.generate","tink/core/Signal.hx",116,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_126_trigger,"tink.core._Signal.Signal_Impl_","trigger",0xe1c7138c,"tink.core._Signal.Signal_Impl_.trigger","tink/core/Signal.hx",126,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_129_create,"tink.core._Signal.Signal_Impl_","create",0x3122cf28,"tink.core._Signal.Signal_Impl_.create","tink/core/Signal.hx",129,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_137_ofClassical,"tink.core._Signal.Signal_Impl_","ofClassical",0xc94e6bba,"tink.core._Signal.Signal_Impl_.ofClassical","tink/core/Signal.hx",137,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_139_ofClassical,"tink.core._Signal.Signal_Impl_","ofClassical",0xc94e6bba,"tink.core._Signal.Signal_Impl_.ofClassical","tink/core/Signal.hx",139,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_136_ofClassical,"tink.core._Signal.Signal_Impl_","ofClassical",0xc94e6bba,"tink.core._Signal.Signal_Impl_.ofClassical","tink/core/Signal.hx",136,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_501b0f390d781a71_135_ofClassical,"tink.core._Signal.Signal_Impl_","ofClassical",0xc94e6bba,"tink.core._Signal.Signal_Impl_.ofClassical","tink/core/Signal.hx",135,0x5ae99903)
namespace tink{
namespace core{
namespace _Signal{

void Signal_Impl__obj::__construct() { }

Dynamic Signal_Impl__obj::__CreateEmpty() { return new Signal_Impl__obj; }

void *Signal_Impl__obj::_hx_vtable = 0;

Dynamic Signal_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Signal_Impl__obj > _hx_result = new Signal_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Signal_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1a937b1e;
}

::Dynamic Signal_Impl__obj::_new( ::Dynamic f){
            	HX_GC_STACKFRAME(&_hx_pos_501b0f390d781a71_9__new)
HXDLIN(   9)		::Dynamic this1 =  ::tink::core::_Signal::SimpleSignal_obj::__alloc( HX_CTX ,f);
HXDLIN(   9)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Signal_Impl__obj,_new,return )

::Dynamic Signal_Impl__obj::map(::Dynamic this1, ::Dynamic f, ::Dynamic __o_gather){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1,::Dynamic,this1, ::Dynamic,f) HXARGC(1)
            		::Dynamic _hx_run( ::Dynamic cb){
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,cb) HXARGC(1)
            			void _hx_run( ::Dynamic result){
            				HX_STACKFRAME(&_hx_pos_501b0f390d781a71_16_map)
HXLINE(  16)				 ::Dynamic this3 = f(result);
HXDLIN(  16)				::tink::core::_Callback::Callback_Impl__obj::invoke(cb,this3);
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_STACKFRAME(&_hx_pos_501b0f390d781a71_16_map)
HXLINE(  16)			return ::tink::core::SignalObject_obj::handle(this1, ::Dynamic(new _hx_Closure_0(f,cb)));
            		}
            		HX_END_LOCAL_FUNC1(return)

            		 ::Dynamic gather = __o_gather;
            		if (hx::IsNull(__o_gather)) gather = true;
            	HX_GC_STACKFRAME(&_hx_pos_501b0f390d781a71_15_map)
HXLINE(  16)		::Dynamic this2 =  ::tink::core::_Signal::SimpleSignal_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_1(this1,f)));
HXDLIN(  16)		::Dynamic ret = this2;
HXLINE(  18)		if (( (bool)(gather) )) {
HXLINE(  18)			return ::tink::core::_Signal::Signal_Impl__obj::gather(ret);
            		}
            		else {
HXLINE(  19)			return ret;
            		}
HXLINE(  18)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Signal_Impl__obj,map,return )

::Dynamic Signal_Impl__obj::flatMap(::Dynamic this1, ::Dynamic f, ::Dynamic __o_gather){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1,::Dynamic,this1, ::Dynamic,f) HXARGC(1)
            		::Dynamic _hx_run( ::Dynamic cb){
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,cb) HXARGC(1)
            			void _hx_run( ::Dynamic result){
            				HX_STACKFRAME(&_hx_pos_501b0f390d781a71_27_flatMap)
HXLINE(  27)				::tink::core::_Future::FutureObject_obj::handle(f(result),cb);
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_STACKFRAME(&_hx_pos_501b0f390d781a71_27_flatMap)
HXLINE(  27)			return ::tink::core::SignalObject_obj::handle(this1, ::Dynamic(new _hx_Closure_0(f,cb)));
            		}
            		HX_END_LOCAL_FUNC1(return)

            		 ::Dynamic gather = __o_gather;
            		if (hx::IsNull(__o_gather)) gather = true;
            	HX_GC_STACKFRAME(&_hx_pos_501b0f390d781a71_26_flatMap)
HXLINE(  27)		::Dynamic this2 =  ::tink::core::_Signal::SimpleSignal_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_1(this1,f)));
HXDLIN(  27)		::Dynamic ret = this2;
HXLINE(  29)		if (( (bool)(gather) )) {
HXLINE(  29)			return ::tink::core::_Signal::Signal_Impl__obj::gather(ret);
            		}
            		else {
HXLINE(  30)			return ret;
            		}
HXLINE(  29)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Signal_Impl__obj,flatMap,return )

::Dynamic Signal_Impl__obj::filter(::Dynamic this1, ::Dynamic f, ::Dynamic __o_gather){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1,::Dynamic,this1, ::Dynamic,f) HXARGC(1)
            		::Dynamic _hx_run( ::Dynamic cb){
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,cb) HXARGC(1)
            			void _hx_run( ::Dynamic result){
            				HX_STACKFRAME(&_hx_pos_501b0f390d781a71_37_filter)
HXLINE(  37)				if (( (bool)(f(result)) )) {
HXLINE(  37)					::tink::core::_Callback::Callback_Impl__obj::invoke(cb,result);
            				}
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_STACKFRAME(&_hx_pos_501b0f390d781a71_37_filter)
HXLINE(  37)			return ::tink::core::SignalObject_obj::handle(this1, ::Dynamic(new _hx_Closure_0(f,cb)));
            		}
            		HX_END_LOCAL_FUNC1(return)

            		 ::Dynamic gather = __o_gather;
            		if (hx::IsNull(__o_gather)) gather = true;
            	HX_GC_STACKFRAME(&_hx_pos_501b0f390d781a71_36_filter)
HXLINE(  37)		::Dynamic this2 =  ::tink::core::_Signal::SimpleSignal_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_1(this1,f)));
HXDLIN(  37)		::Dynamic ret = this2;
HXLINE(  39)		if (( (bool)(gather) )) {
HXLINE(  39)			return ::tink::core::_Signal::Signal_Impl__obj::gather(ret);
            		}
            		else {
HXLINE(  40)			return ret;
            		}
HXLINE(  39)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Signal_Impl__obj,filter,return )

::Dynamic Signal_Impl__obj::select(::Dynamic this1, ::Dynamic selector, ::Dynamic __o_gather){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1,::Dynamic,this1, ::Dynamic,selector) HXARGC(1)
            		::Dynamic _hx_run( ::Dynamic cb){
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,selector, ::Dynamic,cb) HXARGC(1)
            			void _hx_run( ::Dynamic result){
            				HX_STACKFRAME(&_hx_pos_501b0f390d781a71_44_select)
HXLINE(  44)				 ::haxe::ds::Option _g = selector(result);
HXDLIN(  44)				switch((int)(_g->_hx_getIndex())){
            					case (int)0: {
HXLINE(  45)						 ::Dynamic v = _g->_hx_getObject(0);
HXDLIN(  45)						::tink::core::_Callback::Callback_Impl__obj::invoke(cb,v);
            					}
            					break;
            					case (int)1: {
            					}
            					break;
            				}
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_STACKFRAME(&_hx_pos_501b0f390d781a71_44_select)
HXLINE(  44)			return ::tink::core::SignalObject_obj::handle(this1, ::Dynamic(new _hx_Closure_0(selector,cb)));
            		}
            		HX_END_LOCAL_FUNC1(return)

            		 ::Dynamic gather = __o_gather;
            		if (hx::IsNull(__o_gather)) gather = true;
            	HX_GC_STACKFRAME(&_hx_pos_501b0f390d781a71_43_select)
HXLINE(  44)		::Dynamic this2 =  ::tink::core::_Signal::SimpleSignal_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_1(this1,selector)));
HXDLIN(  44)		::Dynamic ret = this2;
HXLINE(  49)		if (( (bool)(gather) )) {
HXLINE(  49)			return ::tink::core::_Signal::Signal_Impl__obj::gather(ret);
            		}
            		else {
HXLINE(  50)			return ret;
            		}
HXLINE(  49)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Signal_Impl__obj,select,return )

::Dynamic Signal_Impl__obj::join(::Dynamic this1,::Dynamic other, ::Dynamic __o_gather){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0,::Dynamic,this1,::Dynamic,other) HXARGC(1)
            		::Dynamic _hx_run( ::Dynamic cb){
            			HX_GC_STACKFRAME(&_hx_pos_501b0f390d781a71_60_join)
HXLINE(  60)			::Dynamic a = ::tink::core::SignalObject_obj::handle(this1,cb);
HXDLIN(  60)			return  ::tink::core::_Callback::LinkPair_obj::__alloc( HX_CTX ,a,::tink::core::SignalObject_obj::handle(other,cb));
            		}
            		HX_END_LOCAL_FUNC1(return)

            		 ::Dynamic gather = __o_gather;
            		if (hx::IsNull(__o_gather)) gather = true;
            	HX_GC_STACKFRAME(&_hx_pos_501b0f390d781a71_57_join)
HXLINE(  58)		::Dynamic this2 =  ::tink::core::_Signal::SimpleSignal_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_0(this1,other)));
HXDLIN(  58)		::Dynamic ret = this2;
HXLINE(  63)		if (( (bool)(gather) )) {
HXLINE(  63)			return ::tink::core::_Signal::Signal_Impl__obj::gather(ret);
            		}
            		else {
HXLINE(  64)			return ret;
            		}
HXLINE(  63)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Signal_Impl__obj,join,return )

::Dynamic Signal_Impl__obj::nextTime(::Dynamic this1, ::Dynamic condition){
            		HX_BEGIN_LOCAL_FUNC_S4(hx::LocalFunc,_hx_Closure_0,::Array< bool >,immediate, ::Dynamic,condition,::Array< ::Dynamic>,link, ::tink::core::FutureTrigger,ret) HXARGC(1)
            		void _hx_run( ::Dynamic v){
            			HX_GC_STACKFRAME(&_hx_pos_501b0f390d781a71_75_nextTime)
HXLINE(  75)			bool _hx_tmp1;
HXDLIN(  75)			if (hx::IsNotNull( condition )) {
HXLINE(  75)				_hx_tmp1 = ( (bool)(condition(v)) );
            			}
            			else {
HXLINE(  75)				_hx_tmp1 = true;
            			}
HXDLIN(  75)			if (_hx_tmp1) {
HXLINE(  76)				ret->trigger(v);
HXLINE(  77)				if (hx::IsNull( link->__get(0) )) {
HXLINE(  77)					immediate[0] = true;
            				}
            				else {
HXLINE(  78)					if (hx::IsNotNull( link->__get(0) )) {
HXLINE(  78)						::tink::core::LinkObject_obj::cancel(link->__get(0));
            					}
            				}
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_501b0f390d781a71_70_nextTime)
HXLINE(  71)		 ::tink::core::FutureTrigger ret =  ::tink::core::FutureTrigger_obj::__alloc( HX_CTX );
HXLINE(  72)		::Array< ::Dynamic> link = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXDLIN(  72)		::Array< bool > immediate = ::Array_obj< bool >::fromData( _hx_array_data_a72baac2_17,1);
HXLINE(  75)		::Dynamic _hx_tmp = ::tink::core::SignalObject_obj::handle(this1, ::Dynamic(new _hx_Closure_0(immediate,condition,link,ret)));
HXDLIN(  75)		link[0] = _hx_tmp;
HXLINE(  81)		if (immediate->__get(0)) {
HXLINE(  82)			if (hx::IsNotNull( link->__get(0) )) {
HXLINE(  82)				::tink::core::LinkObject_obj::cancel(link->__get(0));
            			}
            		}
HXLINE(  84)		return ret;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Signal_Impl__obj,nextTime,return )

::Dynamic Signal_Impl__obj::until(::Dynamic this1,::Dynamic end){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,::Dynamic,this1) HXARGC(1)
            		 ::Dynamic _hx_run( ::Dynamic yield){
            			HX_STACKFRAME(&_hx_pos_501b0f390d781a71_89_until)
HXLINE(  89)			::Dynamic this2 = ::tink::core::SignalObject_obj::handle(this1,yield);
HXDLIN(  89)			if (hx::IsNull( this2 )) {
HXLINE(  89)				return ::tink::core::_Callback::CallbackLink_Impl__obj::noop_dyn();
            			}
            			else {
HXLINE(  89)				return this2->__Field(HX_("cancel",7a,ed,33,b8), hx::paccDynamic);
            			}
HXDLIN(  89)			return null();
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_501b0f390d781a71_87_until)
HXLINE(  88)		 ::tink::core::_Signal::Suspendable ret =  ::tink::core::_Signal::Suspendable_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_0(this1)));
HXLINE(  91)		::tink::core::_Future::FutureObject_obj::handle(end,::tink::core::_Callback::Callback_Impl__obj::fromNiladic(ret->kill_dyn()));
HXLINE(  92)		return ret;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Signal_Impl__obj,until,return )

::Dynamic Signal_Impl__obj::next(::Dynamic this1, ::Dynamic condition){
            	HX_STACKFRAME(&_hx_pos_501b0f390d781a71_97_next)
HXDLIN(  97)		return ::tink::core::_Signal::Signal_Impl__obj::nextTime(this1,condition);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Signal_Impl__obj,next,return )

::Dynamic Signal_Impl__obj::noise(::Dynamic this1){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::tink::core::Noise _hx_run( ::Dynamic _){
            			HX_STACKFRAME(&_hx_pos_501b0f390d781a71_103_noise)
HXDLIN( 103)			return ::tink::core::Noise_obj::Noise_dyn();
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACKFRAME(&_hx_pos_501b0f390d781a71_103_noise)
HXDLIN( 103)		return ::tink::core::_Signal::Signal_Impl__obj::map(this1, ::Dynamic(new _hx_Closure_0()),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Signal_Impl__obj,noise,return )

::Dynamic Signal_Impl__obj::gather(::Dynamic this1){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::tink::core::SignalTrigger,ret) HXARGC(1)
            		void _hx_run( ::Dynamic x){
            			HX_STACKFRAME(&_hx_pos_501b0f390d781a71_112_gather)
HXLINE( 112)			::tink::core::_Callback::CallbackList_Impl__obj::invoke(ret->handlers,x);
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_501b0f390d781a71_110_gather)
HXLINE( 111)		 ::tink::core::SignalTrigger ret = ::tink::core::_Signal::Signal_Impl__obj::trigger();
HXLINE( 112)		::tink::core::SignalObject_obj::handle(this1, ::Dynamic(new _hx_Closure_0(ret)));
HXLINE( 113)		return ret;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Signal_Impl__obj,gather,return )

::Dynamic Signal_Impl__obj::generate( ::Dynamic generator){
            	HX_STACKFRAME(&_hx_pos_501b0f390d781a71_116_generate)
HXLINE( 117)		 ::tink::core::SignalTrigger ret = ::tink::core::_Signal::Signal_Impl__obj::trigger();
HXLINE( 118)		generator(ret->trigger_dyn());
HXLINE( 119)		return ret;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Signal_Impl__obj,generate,return )

 ::tink::core::SignalTrigger Signal_Impl__obj::trigger(){
            	HX_GC_STACKFRAME(&_hx_pos_501b0f390d781a71_126_trigger)
HXDLIN( 126)		return  ::tink::core::SignalTrigger_obj::__alloc( HX_CTX );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Signal_Impl__obj,trigger,return )

::Dynamic Signal_Impl__obj::create( ::Dynamic create){
            	HX_GC_STACKFRAME(&_hx_pos_501b0f390d781a71_129_create)
HXDLIN( 129)		return  ::tink::core::_Signal::Suspendable_obj::__alloc( HX_CTX ,create);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Signal_Impl__obj,create,return )

::Dynamic Signal_Impl__obj::ofClassical( ::Dynamic add, ::Dynamic remove, ::Dynamic __o_gather){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_2, ::Dynamic,add, ::Dynamic,remove) HXARGC(1)
            		::Dynamic _hx_run( ::Dynamic cb){
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,cb) HXARGC(1)
            			void _hx_run( ::Dynamic a){
            				HX_STACKFRAME(&_hx_pos_501b0f390d781a71_137_ofClassical)
HXLINE( 137)				::tink::core::_Callback::Callback_Impl__obj::invoke(cb,a);
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1, ::Dynamic,a1, ::Dynamic,f1) HXARGC(0)
            			void _hx_run(){
            				HX_STACKFRAME(&_hx_pos_501b0f390d781a71_139_ofClassical)
HXLINE( 139)				f1(a1);
            			}
            			HX_END_LOCAL_FUNC0((void))

            			HX_GC_STACKFRAME(&_hx_pos_501b0f390d781a71_136_ofClassical)
HXLINE( 137)			 ::Dynamic f =  ::Dynamic(new _hx_Closure_0(cb));
HXLINE( 138)			add(f);
HXLINE( 139)			 ::Dynamic f1 = remove;
HXDLIN( 139)			 ::Dynamic a1 = f;
HXDLIN( 139)			::Dynamic this2 =  ::tink::core::SimpleLink_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_1(a1,f1)));
HXDLIN( 139)			return this2;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		 ::Dynamic gather = __o_gather;
            		if (hx::IsNull(__o_gather)) gather = true;
            	HX_GC_STACKFRAME(&_hx_pos_501b0f390d781a71_135_ofClassical)
HXLINE( 136)		::Dynamic this1 =  ::tink::core::_Signal::SimpleSignal_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_2(add,remove)));
HXDLIN( 136)		::Dynamic ret = this1;
HXLINE( 143)		if (( (bool)(gather) )) {
HXLINE( 143)			return ::tink::core::_Signal::Signal_Impl__obj::gather(ret);
            		}
            		else {
HXLINE( 144)			return ret;
            		}
HXLINE( 143)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Signal_Impl__obj,ofClassical,return )


Signal_Impl__obj::Signal_Impl__obj()
{
}

bool Signal_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { outValue = map_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"join") ) { outValue = join_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"next") ) { outValue = next_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"until") ) { outValue = until_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"noise") ) { outValue = noise_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"filter") ) { outValue = filter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"select") ) { outValue = select_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"gather") ) { outValue = gather_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"flatMap") ) { outValue = flatMap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"trigger") ) { outValue = trigger_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"nextTime") ) { outValue = nextTime_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"generate") ) { outValue = generate_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"ofClassical") ) { outValue = ofClassical_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Signal_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Signal_Impl__obj_sStaticStorageInfo = 0;
#endif

hx::Class Signal_Impl__obj::__mClass;

static ::String Signal_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	HX_("map",9c,0a,53,00),
	HX_("flatMap",63,10,de,e6),
	HX_("filter",b8,1f,35,85),
	HX_("select",fc,1a,33,6a),
	HX_("join",ea,33,65,46),
	HX_("nextTime",a0,72,c9,f8),
	HX_("until",9e,b8,ef,a6),
	HX_("next",f3,84,02,49),
	HX_("noise",9a,8f,c2,9f),
	HX_("gather",fb,71,9c,55),
	HX_("generate",35,5f,a2,d9),
	HX_("trigger",38,55,df,25),
	HX_("create",fc,66,0f,7c),
	HX_("ofClassical",66,f3,06,0e),
	::String(null())
};

void Signal_Impl__obj::__register()
{
	Signal_Impl__obj _hx_dummy;
	Signal_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("tink.core._Signal.Signal_Impl_",c2,aa,2b,a7);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Signal_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Signal_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Signal_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Signal_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Signal_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace tink
} // end namespace core
} // end namespace _Signal
