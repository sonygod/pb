// Generated by Haxe 4.1.0-rc.1+0545ce110
#include <hxcpp.h>

#ifndef INCLUDED_tink_core_LinkObject
#include <tink/core/LinkObject.h>
#endif
#ifndef INCLUDED_tink_core_SignalObject
#include <tink/core/SignalObject.h>
#endif
#ifndef INCLUDED_tink_core_SignalTrigger
#include <tink/core/SignalTrigger.h>
#endif
#ifndef INCLUDED_tink_core_SimpleLink
#include <tink/core/SimpleLink.h>
#endif
#ifndef INCLUDED_tink_core__Callback_CallbackList_Impl_
#include <tink/core/_Callback/CallbackList_Impl_.h>
#endif
#ifndef INCLUDED_tink_core__Callback_LinkPair
#include <tink/core/_Callback/LinkPair.h>
#endif
#ifndef INCLUDED_tink_core__Callback_ListCell
#include <tink/core/_Callback/ListCell.h>
#endif
#ifndef INCLUDED_tink_core__Signal_Suspendable
#include <tink/core/_Signal/Suspendable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_60e4b242b94eba99_154_new,"tink.core._Signal.Suspendable","new",0x21a3bd8e,"tink.core._Signal.Suspendable.new","tink/core/Signal.hx",154,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_60e4b242b94eba99_163_kill,"tink.core._Signal.Suspendable","kill",0x4ba97ab0,"tink.core._Signal.Suspendable.kill","tink/core/Signal.hx",163,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_60e4b242b94eba99_180_handle,"tink.core._Signal.Suspendable","handle",0xd807873a,"tink.core._Signal.Suspendable.handle","tink/core/Signal.hx",180,0x5ae99903)
HX_LOCAL_STACK_FRAME(_hx_pos_60e4b242b94eba99_172_handle,"tink.core._Signal.Suspendable","handle",0xd807873a,"tink.core._Signal.Suspendable.handle","tink/core/Signal.hx",172,0x5ae99903)
namespace tink{
namespace core{
namespace _Signal{

void Suspendable_obj::__construct( ::Dynamic activate){
            	HX_GC_STACKFRAME(&_hx_pos_60e4b242b94eba99_154_new)
HXLINE( 160)		this->killed = false;
HXLINE( 155)		this->trigger =  ::tink::core::SignalTrigger_obj::__alloc( HX_CTX );
HXLINE( 169)		this->activate = activate;
            	}

Dynamic Suspendable_obj::__CreateEmpty() { return new Suspendable_obj; }

void *Suspendable_obj::_hx_vtable = 0;

Dynamic Suspendable_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Suspendable_obj > _hx_result = new Suspendable_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Suspendable_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x34980dc0;
}

static ::tink::core::SignalObject_obj _hx_tink_core__Signal_Suspendable__hx_tink_core_SignalObject= {
	( ::Dynamic (hx::Object::*)( ::Dynamic))&::tink::core::_Signal::Suspendable_obj::handle,
};

void *Suspendable_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x0b67d878: return &_hx_tink_core__Signal_Suspendable__hx_tink_core_SignalObject;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void Suspendable_obj::kill(){
            	HX_STACKFRAME(&_hx_pos_60e4b242b94eba99_163_kill)
HXDLIN( 163)		if (!(this->killed)) {
HXLINE( 164)			this->killed = true;
HXLINE( 165)			this->trigger = null();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Suspendable_obj,kill,(void))

::Dynamic Suspendable_obj::handle( ::Dynamic cb){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::tink::core::_Signal::Suspendable,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_60e4b242b94eba99_180_handle)
HXLINE( 180)			if ((_gthis->trigger->handlers->length == 0)) {
HXLINE( 181)				_gthis->suspend();
HXLINE( 182)				_gthis->suspend = null();
            			}
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_GC_STACKFRAME(&_hx_pos_60e4b242b94eba99_172_handle)
HXDLIN( 172)		 ::tink::core::_Signal::Suspendable _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE( 173)		if (this->killed) {
HXLINE( 173)			return null();
            		}
HXLINE( 174)		if ((this->trigger->handlers->length == 0)) {
HXLINE( 175)			this->suspend = this->activate(this->trigger->trigger_dyn());
            		}
HXLINE( 178)		::Dynamic a = ::tink::core::_Callback::CallbackList_Impl__obj::add(this->trigger->handlers,cb);
HXDLIN( 178)		::Dynamic this1 =  ::tink::core::SimpleLink_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_0(_gthis)));
HXDLIN( 178)		return  ::tink::core::_Callback::LinkPair_obj::__alloc( HX_CTX ,a,this1);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Suspendable_obj,handle,return )


hx::ObjectPtr< Suspendable_obj > Suspendable_obj::__new( ::Dynamic activate) {
	hx::ObjectPtr< Suspendable_obj > __this = new Suspendable_obj();
	__this->__construct(activate);
	return __this;
}

hx::ObjectPtr< Suspendable_obj > Suspendable_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic activate) {
	Suspendable_obj *__this = (Suspendable_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Suspendable_obj), true, "tink.core._Signal.Suspendable"));
	*(void **)__this = Suspendable_obj::_hx_vtable;
	__this->__construct(activate);
	return __this;
}

Suspendable_obj::Suspendable_obj()
{
}

void Suspendable_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Suspendable);
	HX_MARK_MEMBER_NAME(trigger,"trigger");
	HX_MARK_MEMBER_NAME(activate,"activate");
	HX_MARK_MEMBER_NAME(suspend,"suspend");
	HX_MARK_MEMBER_NAME(check,"check");
	HX_MARK_MEMBER_NAME(killed,"killed");
	HX_MARK_END_CLASS();
}

void Suspendable_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(trigger,"trigger");
	HX_VISIT_MEMBER_NAME(activate,"activate");
	HX_VISIT_MEMBER_NAME(suspend,"suspend");
	HX_VISIT_MEMBER_NAME(check,"check");
	HX_VISIT_MEMBER_NAME(killed,"killed");
}

hx::Val Suspendable_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"kill") ) { return hx::Val( kill_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"check") ) { return hx::Val( check ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"killed") ) { return hx::Val( killed ); }
		if (HX_FIELD_EQ(inName,"handle") ) { return hx::Val( handle_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"trigger") ) { return hx::Val( trigger ); }
		if (HX_FIELD_EQ(inName,"suspend") ) { return hx::Val( suspend ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"activate") ) { return hx::Val( activate ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Suspendable_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"check") ) { check=inValue.Cast< ::Dynamic >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"killed") ) { killed=inValue.Cast< bool >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"trigger") ) { trigger=inValue.Cast<  ::tink::core::SignalTrigger >(); return inValue; }
		if (HX_FIELD_EQ(inName,"suspend") ) { suspend=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"activate") ) { activate=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Suspendable_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("trigger",38,55,df,25));
	outFields->push(HX_("check",c8,98,b6,45));
	outFields->push(HX_("killed",7d,db,f7,84));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo Suspendable_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::tink::core::SignalTrigger */ ,(int)offsetof(Suspendable_obj,trigger),HX_("trigger",38,55,df,25)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Suspendable_obj,activate),HX_("activate",b3,1b,ac,e5)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Suspendable_obj,suspend),HX_("suspend",7c,2f,4f,f7)},
	{hx::fsObject /* ::Dynamic */ ,(int)offsetof(Suspendable_obj,check),HX_("check",c8,98,b6,45)},
	{hx::fsBool,(int)offsetof(Suspendable_obj,killed),HX_("killed",7d,db,f7,84)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Suspendable_obj_sStaticStorageInfo = 0;
#endif

static ::String Suspendable_obj_sMemberFields[] = {
	HX_("trigger",38,55,df,25),
	HX_("activate",b3,1b,ac,e5),
	HX_("suspend",7c,2f,4f,f7),
	HX_("check",c8,98,b6,45),
	HX_("killed",7d,db,f7,84),
	HX_("kill",9e,df,09,47),
	HX_("handle",a8,83,fd,b7),
	::String(null()) };

hx::Class Suspendable_obj::__mClass;

void Suspendable_obj::__register()
{
	Suspendable_obj _hx_dummy;
	Suspendable_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("tink.core._Signal.Suspendable",9c,9e,be,29);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Suspendable_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Suspendable_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Suspendable_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Suspendable_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace tink
} // end namespace core
} // end namespace _Signal
