// Generated by Haxe 4.1.0-rc.1+0545ce110
#ifndef INCLUDED_Permutation
#define INCLUDED_Permutation

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_fdce4ab2ba739b62_6_new)
HX_DECLARE_CLASS0(Permutation)
HX_DECLARE_CLASS2(haxe,io,Bytes)



class HXCPP_CLASS_ATTRIBUTES Permutation_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Permutation_obj OBJ_;
		Permutation_obj();

	public:
		enum { _hx_ClassId = 0x53fc011e };

		void __construct(::Array< int > arr, ::Dynamic callBack,::Array< ::Dynamic> result);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Permutation")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"Permutation"); }

		inline static hx::ObjectPtr< Permutation_obj > __new(::Array< int > arr, ::Dynamic callBack,::Array< ::Dynamic> result) {
			hx::ObjectPtr< Permutation_obj > __this = new Permutation_obj();
			__this->__construct(arr,callBack,result);
			return __this;
		}

		inline static hx::ObjectPtr< Permutation_obj > __alloc(hx::Ctx *_hx_ctx,::Array< int > arr, ::Dynamic callBack,::Array< ::Dynamic> result) {
			Permutation_obj *__this = (Permutation_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Permutation_obj), true, "Permutation"));
			*(void **)__this = Permutation_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_fdce4ab2ba739b62_6_new)
HXLINE(   9)		( ( ::Permutation)(__this) )->total = 1;
HXLINE(   7)		( ( ::Permutation)(__this) )->result = ::cpp::VirtualArray_obj::__new(0);
HXLINE(  14)		int max = arr->length;
HXLINE(  15)		::Array< int > _g = ::Array_obj< int >::__new(0);
HXDLIN(  15)		{
HXLINE(  15)			int _g1 = 0;
HXDLIN(  15)			int _g2 = max;
HXDLIN(  15)			while((_g1 < _g2)){
HXLINE(  15)				_g1 = (_g1 + 1);
HXDLIN(  15)				int ii = (_g1 - 1);
HXDLIN(  15)				_g->push((ii + 1));
            			}
            		}
HXDLIN(  15)		::Array< int > arr1 = _g;
HXLINE(  16)		int i = (arr1->length - 1);
HXLINE(  19)		while((i > 0)){
HXLINE(  20)			int v = arr1->__get(i);
HXLINE(  21)			 ::Permutation _hx_tmp = ( ( ::Permutation)(__this) );
HXDLIN(  21)			_hx_tmp->total = (_hx_tmp->total * v);
HXLINE(  22)			i = (i - 1);
            		}
HXLINE(  25)		::Permutation_obj::heapPermutation(arr1,arr1->length,( ( ::Permutation)(__this) )->total,callBack,result);
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Permutation_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Permutation",e6,5c,6e,f6); }

		static void gen(::Array< int > arr, ::Dynamic callBack,::Array< ::Dynamic> result);
		static ::Dynamic gen_dyn();

		static  ::haxe::io::Bytes copyBytes( ::haxe::io::Bytes b);
		static ::Dynamic copyBytes_dyn();

		static void heapPermutation(::Array< int > a,int size,int total, ::Dynamic callBack,::Array< ::Dynamic> result);
		static ::Dynamic heapPermutation_dyn();

		static void computeAllChoices(::Array< ::Dynamic> data,int n,int outLen,int startIndex,int m,::Array< int > arr,int arrIndex,::Array< ::Dynamic> result);
		static ::Dynamic computeAllChoices_dyn();

		::cpp::VirtualArray result;
		int total;
		 ::Dynamic callBack;
		Dynamic callBack_dyn() { return callBack;}
};


#endif /* INCLUDED_Permutation */ 
